var ee=Object.create;var z=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var ne=Object.getOwnPropertyNames;var ie=Object.getPrototypeOf,se=Object.prototype.hasOwnProperty;var I=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var oe=(e,t,n,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of ne(t))!se.call(e,s)&&s!==n&&z(e,s,{get:()=>t[s],enumerable:!(i=te(t,s))||i.enumerable});return e};var re=(e,t,n)=>(n=e!=null?ee(ie(e)):{},oe(t||!e||!e.__esModule?z(n,"default",{value:e,enumerable:!0}):n,e));var $=I(N=>{"use strict";Object.defineProperty(N,"__esModule",{value:!0});N.shellExpand=N.ensureTrailingSlash=void 0;var ae=e=>e.endsWith("/")?e:`${e}/`;N.ensureTrailingSlash=ae;var le=(e,t)=>e.startsWith("~")&&(e.length===1||e.charAt(1)==="/")?e.replace("~",t):e,ce=(e,t)=>e.replace(/\$([A-Za-z0-9_]+)/g,s=>{var o;let r=s.slice(1);return(o=t[r])!==null&&o!==void 0?o:s}).replace(/\$\{([A-Za-z0-9_]+)(?::-([^}]+))?\}/g,(s,o,r)=>{var l,u;return(u=(l=t[o])!==null&&l!==void 0?l:r)!==null&&u!==void 0?u:s}),ue=(e,t)=>{var n;let{environmentVariables:i}=t;return ce(le(e,(n=i?.HOME)!==null&&n!==void 0?n:"~"),i)};N.shellExpand=ue});var q=I(y=>{"use strict";var de=y&&y.__awaiter||function(e,t,n,i){function s(o){return o instanceof n?o:new n(function(r){r(o)})}return new(n||(n=Promise))(function(o,r){function l(a){try{c(i.next(a))}catch(d){r(d)}}function u(a){try{c(i.throw(a))}catch(d){r(d)}}function c(a){a.done?o(a.value):s(a.value).then(l,u)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(y,"__esModule",{value:!0});y.filepaths=y.folders=y.getCurrentInsertedDirectory=y.sortFilesAlphabetically=void 0;var R=$();function G(e,t=[]){let n=t.map(s=>s.toLowerCase()),i=e.filter(s=>!n.includes(s.toLowerCase()));return[...i.filter(s=>!s.startsWith(".")).sort((s,o)=>s.localeCompare(o)),...i.filter(s=>s.startsWith(".")).sort((s,o)=>s.localeCompare(o)),"../"]}y.sortFilesAlphabetically=G;var pe=(e,t,n)=>{if(e===null)return"/";let i=(0,R.shellExpand)(t,n),s=i.slice(0,i.lastIndexOf("/")+1);return s===""?(0,R.ensureTrailingSlash)(e):s.startsWith("/")?s:`${(0,R.ensureTrailingSlash)(e)}${s}`};y.getCurrentInsertedDirectory=pe;function D(e={}){let{extensions:t=[],equals:n=[],matches:i,filterFolders:s=!1,editFileSuggestions:o,editFolderSuggestions:r,rootDirectory:l,showFolders:u="always"}=e,c=new Set(t),a=new Set(n),d=()=>t.length>0||n.length>0||i,h=(m=[])=>d()?m.filter(({name:g="",type:w})=>{if(!s&&w==="folder"||a.has(g)||i&&g.match(i))return!0;let[,...p]=g.split(".");if(p.length>=1){let b=p.length-1,x=p[b];do{if(c.has(x))return!0;b-=1,x=[p[b],x].join(".")}while(b>=0)}return!1}):m,S=(m=[])=>!o&&!r?m:m.map(g=>Object.assign(Object.assign({},g),(g.type==="file"?o:r)||{}));return{trigger:(m,g)=>{let w=m.lastIndexOf("/"),p=g.lastIndexOf("/");return w!==p?!0:w===-1&&p===-1?!1:m.slice(0,w)!==g.slice(0,p)},getQueryTerm:m=>m.slice(m.lastIndexOf("/")+1),custom:(m,g,w)=>de(this,void 0,void 0,function*(){var p;let{isDangerous:b,currentWorkingDirectory:x,searchTerm:f}=w,O=(p=(0,y.getCurrentInsertedDirectory)(l??x,f,w))!==null&&p!==void 0?p:"/";try{let P=yield g({command:"ls",args:["-1ApL"],cwd:O}),Z=G(P.stdout.split(`
`),[".DS_Store"]),W=[];for(let E of Z)if(E){let V=E.endsWith("/")?"folders":"filepaths";(V==="filepaths"&&u!=="only"||V==="folders"&&u!=="never")&&W.push({type:V==="filepaths"?"file":"folder",name:E,insertValue:E,isDangerous:b,context:{templateType:V}})}return S(h(W))}catch{return[]}})}}y.folders=Object.assign(()=>D({showFolders:"only"}),Object.freeze(D({showFolders:"only"})));y.filepaths=Object.assign(D,Object.freeze(D()))});var B=I(_=>{"use strict";var F=_&&_.__awaiter||function(e,t,n,i){function s(o){return o instanceof n?o:new n(function(r){r(o)})}return new(n||(n=Promise))(function(o,r){function l(a){try{c(i.next(a))}catch(d){r(d)}}function u(a){try{c(i.throw(a))}catch(d){r(d)}}function c(a){a.done?o(a.value):s(a.value).then(l,u)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(_,"__esModule",{value:!0});_.keyValueList=_.keyValue=_.valueList=void 0;var H=new Map;function j(e,t){return e.length===0?t:t.map(n=>n.insertValue?n:Object.assign(Object.assign({},n),{insertValue:n.name+e}))}function K(e,t,n){return F(this,void 0,void 0,function*(){if(typeof e=="function"){let i=yield e(...n);return j(t,i)}if(typeof e[0]=="string"){let i=e.map(s=>({name:s}));return j(t,i)}return j(t,e)})}function L(e,t,n,i){return F(this,void 0,void 0,function*(){if(n||Array.isArray(e)){let s=H.get(e);return s===void 0&&(s=yield K(e,t,i),H.set(e,s)),s}return K(e,t,i)})}function U(e,t){return typeof t=="string"?e&&t==="keys"||!e&&t==="values":t}function M(e,...t){return Math.max(...t.map(n=>e.lastIndexOf(n)))}function C(e,t){let n=new Set(e);return t.filter(i=>{var s;return typeof i.name=="string"?!n.has(i.name):!(!((s=i.name)===null||s===void 0)&&s.some(o=>n.has(o)))})}function me({delimiter:e=",",values:t=[],cache:n=!1,insertDelimiter:i=!1,allowRepeatedValues:s=!1}){return{trigger:(o,r)=>o.lastIndexOf(e)!==r.lastIndexOf(e),getQueryTerm:o=>o.slice(o.lastIndexOf(e)+e.length),custom:(...o)=>F(this,void 0,void 0,function*(){var r;let l=yield L(t,i?e:"",n,o);if(s)return l;let[u]=o,c=(r=u[u.length-1])===null||r===void 0?void 0:r.split(e);return C(c,l)})}}_.valueList=me;function fe({separator:e="=",keys:t=[],values:n=[],cache:i=!1,insertSeparator:s=!0}){return{trigger:(o,r)=>o.indexOf(e)!==r.indexOf(e),getQueryTerm:o=>o.slice(o.indexOf(e)+1),custom:(...o)=>F(this,void 0,void 0,function*(){let[r]=o,u=!r[r.length-1].includes(e),c=u?t:n,a=U(u,i);return L(c,u&&s?e:"",a,o)})}}_.keyValue=fe;function ge({separator:e="=",delimiter:t=",",keys:n=[],values:i=[],cache:s=!1,insertSeparator:o=!0,insertDelimiter:r=!1,allowRepeatedKeys:l=!1,allowRepeatedValues:u=!0}){return{trigger:(c,a)=>{let d=M(c,e,t),h=M(a,e,t);return d!==h},getQueryTerm:c=>{let a=M(c,e,t);return c.slice(a+1)},custom:(...c)=>F(this,void 0,void 0,function*(){let[a]=c,d=a[a.length-1],h=M(d,e,t),S=h===-1||d.slice(h,h+e.length)!==e,m=S?n:i,g=U(S,s),p=yield L(m,S?o?e:"":r?t:"",g,c);if(S){if(l)return p;let x=d.split(t).map(f=>f.slice(0,f.indexOf(e)));return C(x,p)}if(u)return p;let b=d.split(t).map(x=>x.slice(x.indexOf(e)+e.length));return C(b,p)})}}_.keyValueList=ge});var X=I(k=>{"use strict";var he=k&&k.__awaiter||function(e,t,n,i){function s(o){return o instanceof n?o:new n(function(r){r(o)})}return new(n||(n=Promise))(function(o,r){function l(a){try{c(i.next(a))}catch(d){r(d)}}function u(a){try{c(i.throw(a))}catch(d){r(d)}}function c(a){a.done?o(a.value):s(a.value).then(l,u)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(k,"__esModule",{value:!0});k.ai=void 0;var ye=4097,ve=4,be=.8,we=ye*ve*be;function xe({name:e,prompt:t,message:n,postProcess:i,temperature:s,splitOn:o}){return{scriptTimeout:15e3,custom:(r,l,u)=>he(this,void 0,void 0,function*(){var c,a;let d=yield l({command:"fig",args:["settings","--format","json","autocomplete.ai.enabled"]});if(!JSON.parse(d.stdout))return[];let h=typeof t=="function"?yield t({tokens:r,executeCommand:l,generatorContext:u}):t,S=typeof n=="function"?yield n({tokens:r,executeCommand:l,generatorContext:u}):n;if(S===null||S.length===0)return console.warn("No message provided to AI generator"),[];let m=we-((c=h?.length)!==null&&c!==void 0?c:0),g={model:"gpt-3.5-turbo",source:"autocomplete",name:e,messages:[...h?[{role:"system",content:h}]:[],{role:"user",content:S.slice(0,m)}],temperature:s},w=JSON.stringify(g),p=yield l({command:"fig",args:["_","request","--route","/ai/chat","--method","POST","--body",w]}),b=JSON.parse(p.stdout);return(a=b?.choices.map(f=>{var O;return(O=f?.message)===null||O===void 0?void 0:O.content}).filter(f=>typeof f=="string").flatMap(f=>o?f.split(o).filter(O=>O.trim().length>0):[f]).map(f=>{if(i)return i(f);let O=f.trim().replace(/\n/g," ");return{icon:"\u{1FA84}",name:O,insertValue:`'${O}'`,description:"Generated by Fig AI"}}))!==null&&a!==void 0?a:[]})}}k.ai=xe});var J=I(v=>{"use strict";var Se=v&&v.__createBinding||(Object.create?function(e,t,n,i){i===void 0&&(i=n);var s=Object.getOwnPropertyDescriptor(t,n);(!s||("get"in s?!t.__esModule:s.writable||s.configurable))&&(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,s)}:function(e,t,n,i){i===void 0&&(i=n),e[i]=t[n]}),Oe=v&&v.__exportStar||function(e,t){for(var n in e)n!=="default"&&!Object.prototype.hasOwnProperty.call(t,n)&&Se(t,e,n)};Object.defineProperty(v,"__esModule",{value:!0});v.ai=v.folders=v.filepaths=void 0;var Y=q();Object.defineProperty(v,"filepaths",{enumerable:!0,get:function(){return Y.filepaths}});Object.defineProperty(v,"folders",{enumerable:!0,get:function(){return Y.folders}});Oe(B(),v);var _e=X();Object.defineProperty(v,"ai",{enumerable:!0,get:function(){return _e.ai}})});var A=re(J(),1),T={script:["bash","-c",'for i in $(find -E . -regex ".*.robot" -type f); do cat -s $i ; done'],postProcess:e=>{let t=e.matchAll(/(?:^\s\s+\[Tags\])\s\s+(\w+ *)*(?!.\#.*)/gm),n=new Set,i=[];for(let[s]of t)for(let o of s.trim().substring(6).trim().split(/\s\s+/))n.has(o)||(n.add(o),i.push({name:o,description:"Tag",icon:"\u{1F3F7}"}));return i}},Te={trigger:":",custom:async(e,t)=>{if(!!e[e.length-1].includes(":"))return[];let{stdout:s}=await t({command:"bash",args:["-c",'for i in $(find -E . -regex ".*.(robot|resource)" -type f); do cat -s $i ; done']});return[...s.matchAll(/^\$\{(.*?)\}/gm)].map(r=>r[1]).map(r=>({name:r,description:"Variable"}))}},Q={script:["bash","-c",'for i in $(find -E . -regex ".*.robot" -type f); do cat -s $i ; done'],postProcess:e=>{let t=e.matchAll(/(?:\*{3} ?Test Cases ?\*{3})([\S\s]*)(?:\*{3}(\w+\s?)+\*{3})*/gim),n=new Set,i=[];for(let[s,o]of t){let r=o.matchAll(/^(\w+( |-)*)+(?!.\#.*)(?!.\#.*)/gm);for(let[l]of r)l=l.trim(),l.search(/\s\s+/)==-1&&(n.has(l)||(n.add(l),i.push({name:l,description:"Test case"})))}return i}},Ne={name:"robot",description:"CLI for running Robot Framework automation tests",args:{name:"robot script",isScript:!0,isVariadic:!0,generators:(0,A.filepaths)({extensions:["robot"],editFileSuggestions:{priority:76,icon:"fig://icon?type=txt"}})},options:[{name:["-h","-?","--help"],description:"Print usage instructions"},{name:"--rpa",description:'Turn on the generic automation mode. Mainly affects terminology so that "test" is replaced with "task" in logs and reports'},{name:["-F","--extension"],description:"Parse only files with this extension when executing a directory",args:{name:"extension",description:"File extensions divided by colon",suggestions:["txt","robot:txt"]}},{name:["-N","--name"],description:"Set a name of the top level suite",args:{name:"name"}},{name:["-D","--doc"],insertValue:"-D '{cursor}'",description:"Set a documentation of the top level suite"},{name:["-M","--metadata"],insertValue:"-M {cursor}:",description:"Set metadata of the top level suite",args:{name:"name:value"}},{name:["-G","--settag"],description:"Sets given tag to all executed tests",args:{name:"tag"}},{name:["-t","--test"],description:"Select tests by name or by long name containing also parent suite name like `Parent.Test`",args:{name:"name",generators:Q}},{name:"--task",description:"Alias to --test. Especially applicable with --rpa",args:{name:"name",generators:Q}},{name:["-s","--suite"],description:"Select suites by name",args:{name:"name"}},{name:["-i","--include"],description:"Select test cases by tag",args:{name:"tag",generators:T}},{name:["-e","--exclude"],description:"Select test cases not to run by tag",args:{name:"tag",generators:T}},{name:["-R","--rerunfailed"],description:"Select failed tests from an earlier output file to be re-executed",args:{name:"output file",generators:(0,A.filepaths)({extensions:["xml"]})}},{name:["-S","--rerunfailedsuites"],description:"Select failed suites from an earlier output file to be re-executed",args:{name:"output file",generators:(0,A.filepaths)({extensions:["xml"]})}},{name:"--runemptysuite",description:"Executes suite even if it contains no tests"},{name:"--skip",description:"Tests having given tag will be skipped",args:{name:"tag",generators:T}},{name:"--skiponfailure",description:"Tests having given tag will be skipped if they fail",args:{name:"tag",generators:T}},{name:["-v","--variable"],description:"Set variables in the test data",args:{name:"variable",generators:Te}},{name:["-V","--variablefile"],description:"Python or YAML file file to read variables from",args:{name:"file",generators:(0,A.filepaths)({extensions:["py","yaml"]})}},{name:["-d","--outputdir"],description:"Where to create output files. The default is the directory where tests are run from",args:{name:"directory",template:"folders"}},{name:["-o","--output"],description:"XML output file relative to --outputdir unless given as an absolute path. Default: output.xml",args:{name:"file",suggestions:["output.xml"]}},{name:["-l","--log"],description:"HTML log file. Can be disabled by giving a special value `NONE`. Default: log.html",args:{name:"file",suggestions:["log.html","NONE"]}},{name:["-r","--report"],description:"HTML report file. Can be disabled with `NONE` similarly as --log. Default: report.html",args:{name:"file",suggestions:["report.html","NONE"]}},{name:["-x","--xunit"],description:"XUnit compatible result file. Not created unless this option is specified",args:{name:"file",suggestions:["xunit.xml"]}},{name:["-b","--debugfile"],description:"Debug file written during execution. Not created unless this option is specified",args:{name:"file"}},{name:["-T","--timestampoutputs"],description:"Adds timestamp in a format `YYYYMMDD-hhmmss` to all generated output files between their basename and extension"},{name:"--splitlog",description:"Split the log file into smaller pieces that open in browsers transparently"},{name:"--logtitle",description:"Title for the generated log file. The default title is `<SuiteName> Log.`",args:{name:"title"}},{name:"--reporttitle",description:"Title for the generated report file. The default title is `<SuiteName> Report`",args:{name:"title"}},{name:"--reportbackground",description:"Background colors to use in the report file. Given in format `passed:failed:skipped` where the `:skipped` part can be omitted",args:{name:"colors"}},{name:"--maxerrorlines",description:"Maximum number of error message lines to show in report when tests fail. Default is 40, minimum is 10 and `NONE` can be used to show the full message",args:{name:"lines",suggestions:[{name:"40",displayName:"40 (default)",priority:76,description:"Default number of lines"},{name:"10",displayName:"10 (minimum)",description:"Minimum number of lines"},{name:"NONE",description:"Unlimited number of lines. Shows the full message"}]}},{name:"--maxassignlength",description:"Maximum number of characters to show in log when variables are assigned. Zero or negative values can be used to avoid showing assigned values at all. Default is 200",args:{name:"characters",suggestions:[{name:"200",displayName:"200 (default)",priority:76,description:"Default number of characters"},{name:"0",description:"No values at all"}]}},{name:["-L","--loglevel"],description:"Threshold level for logging",args:{name:"level",suggestions:[{name:"TRACE",type:"option"},{name:"DEBUG",type:"option"},{name:"INFO",displayName:"INFO (default)",priority:76,type:"option"},{name:"WARN",type:"option"},{name:"NONE",displayName:"NONE (no logging)",type:"option"}]}},{name:"--suitestatlevel",description:"How many levels to show in `Statistics by Suite` in log and report",args:{name:"level"}},{name:"--tagstatinclude",description:"Include only matching tags in `Statistics by Tag` in log and report",args:{name:"tag",generators:T}},{name:"--tagstatexclude",description:"Exclude matching tags from `Statistics by Tag`",args:{name:"tag",generators:T}},{name:"--tagstatcombine",description:"Create combined statistics based on tags. These statistics are added into `Statistics by Tag`",args:{name:"tags:name",generators:T}},{name:"--tagdoc",description:"Add documentation to tags matching the given pattern",args:{name:"pattern:doc",generators:T}},{name:"--tagstatlink",description:"Add external links into `Statistics by Tag`. Pattern can use `*`, `?` and `[]` as wildcards",args:{name:"pattern:link:title",generators:T}},{name:"--expandkeywords",description:"Matching keywords will be automatically expanded in the log file",args:{name:"pattern",suggestions:[{name:"name:<pattern>",insertValue:"name:{cursor}",type:"option"},{name:"tag:<pattern>",insertValue:"tag:{cursor}",type:"option"}]}},{name:"--removekeywords",description:"Remove keyword data from the generated log file",args:{name:"pattern",suggestions:[{name:"all",description:"Remove data from all keywords",type:"option"},{name:"passed",description:"Remove data only from keywords in passed test cases and suites",type:"option"},{name:"for",description:"Remove passed iterations from for loops",type:"option"},{name:"while",description:"Remove passed iterations from while loops",type:"option"},{name:"wuks",description:"Remove all but the last failing keyword inside `BuiltIn.Wait Until Keyword Succeeds`",type:"option"},{name:"name:<pattern>",insertValue:"name:{cursor}",type:"option"},{name:"tag:<pattern>",insertValue:"tag:{cursor}",type:"option"}]}},{name:"--flattenkeywords",description:"Flattens matching keywords in the generated log file",args:{name:"pattern",suggestions:[{name:"for",description:"Flatten FOR loops fully",type:"option"},{name:"while",description:"Flatten WHILE loops fully",type:"option"},{name:"iteration",description:"Flatten FOR/WHILE loop iterations",type:"option"},{name:"name:<pattern>",insertValue:"name:{cursor}",type:"option"},{name:"tag:<pattern>",insertValue:"tag:{cursor}",type:"option"}]}},{name:"--listener",description:"A class for monitoring test execution. Gets notifications e.g. when tests start and end",args:{name:"class"}},{name:"--nostatusrc",description:"Sets the return code to zero regardless of failures in test cases. Error codes are returned normally"},{name:"--dryrun",description:"Sets the return code to zero regardless of failures in test cases. Error codes are returned normally"},{name:["-X","--exitonfailure"],description:"Stops test execution if any test fails"},{name:"--exitonerror",description:"Stops test execution if any error occurs when parsing test data, importing libraries, and so on"},{name:"--skipteardownonexit",description:"Causes teardowns to be skipped if test execution is stopped prematurely"},{name:"--randomize",description:"Randomizes the test execution order",args:{name:"type",suggestions:[{name:"all",description:"Randomizes both suites and tests",type:"option"},{name:"suites",description:"Randomizes suites",type:"option"},{name:"tests",description:"Randomizes tests",type:"option"},{name:"none",displayName:"none (default)",priority:76,description:"No randomization (default)",type:"option"}]}},{name:"--prerunmodifier",description:"Class to programmatically modify the suite structure before execution",args:{name:"class"}},{name:"--prerebotmodifier",description:"Class to programmatically modify the result model before creating reports and logs",args:{name:"class"}},{name:"--console",description:"How to report execution on the console",args:{name:"type",suggestions:[{name:"verbose",displayName:"verbose (default)",priority:76,description:"Report every suite and test (default)",type:"option"},{name:"dotted",description:"Only show `.` for passed test, `s` for skipped tests, and `F` for failed tests",type:"option"},{name:"quiet",description:"No output except for errors and warnings",type:"option"},{name:"none",description:"No output whatsoever",type:"option"}]}},{name:["-.","--dotted"],description:"Shortcut for `--console dotted`"},{name:"--quiet",description:"Shortcut for `--console quiet`"},{name:["-W","--consolewidth"],description:"Width of the console output. Default is 78",args:{name:"chars",suggestions:[{name:"78",displayName:"78 (default)",priority:76}]}},{name:["-C","--consolecolors"],description:"Use colors on console output or not",args:{name:"option",suggestions:[{name:"auto",displayName:"auto (default)",priority:76,description:"Use colors when output not redirected (default)",type:"option"},{name:"on",description:"Always use colors",type:"option"},{name:"ansi",description:"Like `on` but use ANSI colors also on Windows",type:"option"},{name:"off",description:"Disable colors altogether",type:"option"}]}},{name:["-K","--consolemarkers"],description:"Show markers on the console when top level keywords in a test case end",args:{name:"option",suggestions:[{name:"auto",type:"option"},{name:"on",type:"option"},{name:"off",type:"option"}]}},{name:["-P","--pythonpath"],description:"Additional locations (directories, ZIPs) where to search libraries and other extensions when they are imported",args:{name:"path",generators:(0,A.filepaths)({extensions:["zip"]})}},{name:["-A","--argumentfile"],description:"Text file to read more arguments from. Use special path `STDIN` to read contents from the standard input stream",args:{name:"path",template:"filepaths"}},{name:"--version",description:"Print version information"}]},De=Ne;export{De as default};
