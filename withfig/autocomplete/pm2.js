var ae=Object.create;var K=Object.defineProperty;var oe=Object.getOwnPropertyDescriptor;var le=Object.getOwnPropertyNames;var ce=Object.getPrototypeOf,de=Object.prototype.hasOwnProperty;var I=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var pe=(e,t,n,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of le(t))!de.call(e,r)&&r!==n&&K(e,r,{get:()=>t[r],enumerable:!(i=oe(t,r))||i.enumerable});return e};var ue=(e,t,n)=>(n=e!=null?ae(ce(e)):{},pe(t||!e||!e.__esModule?K(n,"default",{value:e,enumerable:!0}):n,e));var H=I(F=>{"use strict";Object.defineProperty(F,"__esModule",{value:!0});F.shellExpand=F.ensureTrailingSlash=void 0;var me=e=>e.endsWith("/")?e:`${e}/`;F.ensureTrailingSlash=me;var fe=(e,t)=>e.startsWith("~")&&(e.length===1||e.charAt(1)==="/")?e.replace("~",t):e,ge=(e,t)=>e.replace(/\$([A-Za-z0-9_]+)/g,r=>{var s;let o=r.slice(1);return(s=t[o])!==null&&s!==void 0?s:r}).replace(/\$\{([A-Za-z0-9_]+)(?::-([^}]+))?\}/g,(r,s,o)=>{var c,d;return(d=(c=t[s])!==null&&c!==void 0?c:o)!==null&&d!==void 0?d:r}),he=(e,t)=>{var n;let{environmentVariables:i}=t;return ge(fe(e,(n=i?.HOME)!==null&&n!==void 0?n:"~"),i)};F.shellExpand=he});var Q=I(y=>{"use strict";var ye=y&&y.__awaiter||function(e,t,n,i){function r(s){return s instanceof n?s:new n(function(o){o(s)})}return new(n||(n=Promise))(function(s,o){function c(a){try{l(i.next(a))}catch(p){o(p)}}function d(a){try{l(i.throw(a))}catch(p){o(p)}}function l(a){a.done?s(a.value):r(a.value).then(c,d)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(y,"__esModule",{value:!0});y.filepaths=y.folders=y.getCurrentInsertedDirectory=y.sortFilesAlphabetically=void 0;var N=H();function $(e,t=[]){let n=t.map(r=>r.toLowerCase()),i=e.filter(r=>!n.includes(r.toLowerCase()));return[...i.filter(r=>!r.startsWith(".")).sort((r,s)=>r.localeCompare(s)),...i.filter(r=>r.startsWith(".")).sort((r,s)=>r.localeCompare(s)),"../"]}y.sortFilesAlphabetically=$;var ve=(e,t,n)=>{if(e===null)return"/";let i=(0,N.shellExpand)(t,n),r=i.slice(0,i.lastIndexOf("/")+1);return r===""?(0,N.ensureTrailingSlash)(e):r.startsWith("/")?r:`${(0,N.ensureTrailingSlash)(e)}${r}`};y.getCurrentInsertedDirectory=ve;function M(e={}){let{extensions:t=[],equals:n=[],matches:i,filterFolders:r=!1,editFileSuggestions:s,editFolderSuggestions:o,rootDirectory:c,showFolders:d="always"}=e,l=new Set(t),a=new Set(n),p=()=>t.length>0||n.length>0||i,h=(m=[])=>p()?m.filter(({name:g="",type:O})=>{if(!r&&O==="folder"||a.has(g)||i&&g.match(i))return!0;let[,...u]=g.split(".");if(u.length>=1){let b=u.length-1,S=u[b];do{if(l.has(S))return!0;b-=1,S=[u[b],S].join(".")}while(b>=0)}return!1}):m,w=(m=[])=>!s&&!o?m:m.map(g=>Object.assign(Object.assign({},g),(g.type==="file"?s:o)||{}));return{trigger:(m,g)=>{let O=m.lastIndexOf("/"),u=g.lastIndexOf("/");return O!==u?!0:O===-1&&u===-1?!1:m.slice(0,O)!==g.slice(0,u)},getQueryTerm:m=>m.slice(m.lastIndexOf("/")+1),custom:(m,g,O)=>ye(this,void 0,void 0,function*(){var u;let{isDangerous:b,currentWorkingDirectory:S,searchTerm:f}=O,_=(u=(0,y.getCurrentInsertedDirectory)(c??S,f,O))!==null&&u!==void 0?u:"/";try{let J=yield g({command:"ls",args:["-1ApL"],cwd:_}),se=$(J.stdout.split(`
`),[".DS_Store"]),z=[];for(let L of se)if(L){let D=L.endsWith("/")?"folders":"filepaths";(D==="filepaths"&&d!=="only"||D==="folders"&&d!=="never")&&z.push({type:D==="filepaths"?"file":"folder",name:L,insertValue:L,isDangerous:b,context:{templateType:D}})}return w(h(z))}catch{return[]}})}}y.folders=Object.assign(()=>M({showFolders:"only"}),Object.freeze(M({showFolders:"only"})));y.filepaths=Object.assign(M,Object.freeze(M()))});var Y=I(x=>{"use strict";var T=x&&x.__awaiter||function(e,t,n,i){function r(s){return s instanceof n?s:new n(function(o){o(s)})}return new(n||(n=Promise))(function(s,o){function c(a){try{l(i.next(a))}catch(p){o(p)}}function d(a){try{l(i.throw(a))}catch(p){o(p)}}function l(a){a.done?s(a.value):r(a.value).then(c,d)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(x,"__esModule",{value:!0});x.keyValueList=x.keyValue=x.valueList=void 0;var B=new Map;function G(e,t){return e.length===0?t:t.map(n=>n.insertValue?n:Object.assign(Object.assign({},n),{insertValue:n.name+e}))}function X(e,t,n){return T(this,void 0,void 0,function*(){if(typeof e=="function"){let i=yield e(...n);return G(t,i)}if(typeof e[0]=="string"){let i=e.map(r=>({name:r}));return G(t,i)}return G(t,e)})}function U(e,t,n,i){return T(this,void 0,void 0,function*(){if(n||Array.isArray(e)){let r=B.get(e);return r===void 0&&(r=yield X(e,t,i),B.set(e,r)),r}return X(e,t,i)})}function Z(e,t){return typeof t=="string"?e&&t==="keys"||!e&&t==="values":t}function R(e,...t){return Math.max(...t.map(n=>e.lastIndexOf(n)))}function E(e,t){let n=new Set(e);return t.filter(i=>{var r;return typeof i.name=="string"?!n.has(i.name):!(!((r=i.name)===null||r===void 0)&&r.some(s=>n.has(s)))})}function be({delimiter:e=",",values:t=[],cache:n=!1,insertDelimiter:i=!1,allowRepeatedValues:r=!1}){return{trigger:(s,o)=>s.lastIndexOf(e)!==o.lastIndexOf(e),getQueryTerm:s=>s.slice(s.lastIndexOf(e)+e.length),custom:(...s)=>T(this,void 0,void 0,function*(){var o;let c=yield U(t,i?e:"",n,s);if(r)return c;let[d]=s,l=(o=d[d.length-1])===null||o===void 0?void 0:o.split(e);return E(l,c)})}}x.valueList=be;function Oe({separator:e="=",keys:t=[],values:n=[],cache:i=!1,insertSeparator:r=!0}){return{trigger:(s,o)=>s.indexOf(e)!==o.indexOf(e),getQueryTerm:s=>s.slice(s.indexOf(e)+1),custom:(...s)=>T(this,void 0,void 0,function*(){let[o]=s,d=!o[o.length-1].includes(e),l=d?t:n,a=Z(d,i);return U(l,d&&r?e:"",a,s)})}}x.keyValue=Oe;function Se({separator:e="=",delimiter:t=",",keys:n=[],values:i=[],cache:r=!1,insertSeparator:s=!0,insertDelimiter:o=!1,allowRepeatedKeys:c=!1,allowRepeatedValues:d=!0}){return{trigger:(l,a)=>{let p=R(l,e,t),h=R(a,e,t);return p!==h},getQueryTerm:l=>{let a=R(l,e,t);return l.slice(a+1)},custom:(...l)=>T(this,void 0,void 0,function*(){let[a]=l,p=a[a.length-1],h=R(p,e,t),w=h===-1||p.slice(h,h+e.length)!==e,m=w?n:i,g=Z(w,r),u=yield U(m,w?s?e:"":o?t:"",g,l);if(w){if(c)return u;let S=p.split(t).map(f=>f.slice(0,f.indexOf(e)));return E(S,u)}if(d)return u;let b=p.split(t).map(S=>S.slice(S.indexOf(e)+e.length));return E(b,u)})}}x.keyValueList=Se});var ee=I(k=>{"use strict";var we=k&&k.__awaiter||function(e,t,n,i){function r(s){return s instanceof n?s:new n(function(o){o(s)})}return new(n||(n=Promise))(function(s,o){function c(a){try{l(i.next(a))}catch(p){o(p)}}function d(a){try{l(i.throw(a))}catch(p){o(p)}}function l(a){a.done?s(a.value):r(a.value).then(c,d)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(k,"__esModule",{value:!0});k.ai=void 0;var _e=4097,xe=4,Ae=.8,je=_e*xe*Ae;function Fe({name:e,prompt:t,message:n,postProcess:i,temperature:r,splitOn:s}){return{scriptTimeout:15e3,custom:(o,c,d)=>we(this,void 0,void 0,function*(){var l,a;let p=yield c({command:"fig",args:["settings","--format","json","autocomplete.ai.enabled"]});if(!JSON.parse(p.stdout))return[];let h=typeof t=="function"?yield t({tokens:o,executeCommand:c,generatorContext:d}):t,w=typeof n=="function"?yield n({tokens:o,executeCommand:c,generatorContext:d}):n;if(w===null||w.length===0)return console.warn("No message provided to AI generator"),[];let m=je-((l=h?.length)!==null&&l!==void 0?l:0),g={model:"gpt-3.5-turbo",source:"autocomplete",name:e,messages:[...h?[{role:"system",content:h}]:[],{role:"user",content:w.slice(0,m)}],temperature:r},O=JSON.stringify(g),u=yield c({command:"fig",args:["_","request","--route","/ai/chat","--method","POST","--body",O]}),b=JSON.parse(u.stdout);return(a=b?.choices.map(f=>{var _;return(_=f?.message)===null||_===void 0?void 0:_.content}).filter(f=>typeof f=="string").flatMap(f=>s?f.split(s).filter(_=>_.trim().length>0):[f]).map(f=>{if(i)return i(f);let _=f.trim().replace(/\n/g," ");return{icon:"\u{1FA84}",name:_,insertValue:`'${_}'`,description:"Generated by Fig AI"}}))!==null&&a!==void 0?a:[]})}}k.ai=Fe});var ne=I(v=>{"use strict";var ke=v&&v.__createBinding||(Object.create?function(e,t,n,i){i===void 0&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);(!r||("get"in r?!t.__esModule:r.writable||r.configurable))&&(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){i===void 0&&(i=n),e[i]=t[n]}),Ie=v&&v.__exportStar||function(e,t){for(var n in e)n!=="default"&&!Object.prototype.hasOwnProperty.call(t,n)&&ke(t,e,n)};Object.defineProperty(v,"__esModule",{value:!0});v.ai=v.folders=v.filepaths=void 0;var te=Q();Object.defineProperty(v,"filepaths",{enumerable:!0,get:function(){return te.filepaths}});Object.defineProperty(v,"folders",{enumerable:!0,get:function(){return te.folders}});Ie(Y(),v);var Te=ee();Object.defineProperty(v,"ai",{enumerable:!0,get:function(){return Te.ai}})});var re=ue(ne(),1),Pe={jsonFileGenerator:(0,re.filepaths)({extensions:["json"]})},C={name:"app name"},P={name:"key"},A={name:"name"},q={name:"number"},V={name:"path",template:"filepaths"},ie={name:"platform",isOptional:!0,suggestions:["systemd","upstart","launchd","rcd"]},W={name:"json",generators:Pe.jsonFileGenerator},j=[{name:["-V","--version"],description:"Outputs the version number"},{name:"-v",description:"Gets version"},{name:["-s","--silent"],description:"Hides all messages"},{name:["-m","--mini-list"],description:"Displays a compacted list without formatting"},{name:["-f","--force"],description:"Forces actions"},{name:"--disable-logs",description:"Do not write logs"},{name:["-n","--name"],description:"Sets a name for script",args:A},{name:["-i","--instances"],description:"Launches [number] instances (for networked app)(load balanced)",args:q},{name:"--parallel",description:"Number of parallel actions (for restart/reload)",args:q},{name:["-l","--log"],description:"Specifies entire log file (error and out are both included)",args:{...V,isOptional:!0}},{name:["-o","--output"],description:"Specifies out log file",args:V},{name:["-e","--error"],description:"Specifies error log file",args:V},{name:["-p","--pid"],description:"Specify pid file",args:{name:"pid",template:"filepaths"}},{name:["-k","--kill-timeout"],description:"Delays before sending final SIGKILL signal to process",args:{name:"delay"}},{name:"--listen-timeout",description:"Listen timeout on application reload",args:{name:"delay"}},{name:"--max-memory-restart",description:"Specify max memory amount used to autorestart (in octet or use syntax like 100M)",args:{name:"memory"}},{name:"--restart-delay",description:"Specify a delay between restarts (in milliseconds)",args:{name:"delay"}},{name:"--env",description:"Specify environment to get specific env variables",args:{name:"Environment Name"}},{name:"--log-type",description:"Specify log output style (raw by default, json optional)",args:{name:"type",default:"raw"}},{name:["-x","--execute-command"],description:"Execute a program using fork system"},{name:"--max-restarts",description:"Only Restart the script COUNT times",args:{name:"Count",isOptional:!0}},{name:["-u","--user"],description:"Defines user when generating startup script",args:{name:"username"}},{name:"--uid",description:"Runs target script with <uid> rights",args:{name:"uid"}},{name:"--gid",description:"Runs target script with <gid> rights",args:{name:"gid"}},{name:"--cwd",description:"Runs target script as <username>",args:V},{name:"--hp",description:"Defines home path when generating startup script",args:{name:"home path",template:"folders"}},{name:"--wait-ip",description:"Overrides systemd script to wait for full internet connectivity to launch pm2"},{name:"--service-name",description:"Defines service name when generating startup script",args:A},{name:["-c","--cron"],description:"Restarts a running process based on a cron pattern",args:{name:"Cron Pattern"}},{name:["-w","--write"],description:"Writes configuration in local folder"},{name:"--interpreter",description:"The interpreter pm2 should use for executing app (bash, python\u2026)",args:{name:"interpreter"}},{name:"--interpreter-args",description:"Interprets options (alias of \u2013node-args)",args:{name:"Arguments"}},{name:"--log-date-format",description:"Adds custom prefix timestamp to logs",args:{name:"Date Format"}},{name:"--no-daemon",description:"Runs pm2 daemon in the foreground if it doesn\u2019t exist already"},{name:["-a","--update-env"],description:"Updates environment on restart/reload (-a <=> apply)"},{name:"\u2013-source-map-support",description:"Force source map support"},{name:"\u2013-only",description:"With json declaration, allow to only act on one application",args:C},{name:"\u2013-disable-source-map-support",description:"Force source map support"},{name:"\u2013-wait-ready",description:"Asks pm2 to wait for ready event from your app"},{name:"\u2013-merge-logs",description:"Merges logs from different instances but keep error and out separated"},{name:"\u2013-watch",description:"Watches application folder for changes (default: )",args:{name:"paths",template:["folders"],isVariadic:!0}},{name:"\u2013-ignore-watch",description:"Folder/files to be ignored watching",args:{name:"Folder or Files",template:["folders","filepaths"],isVariadic:!0}},{name:"\u2013-node-args",description:"Space delimited arguments to pass to node in cluster mode",args:{name:"Node Args",description:"\u2013node-args=`\u2013debug=7001 \u2013trace-deprecation`"}},{name:"\u2013-no-color",description:"Skip colors"},{name:"\u2013-no-vizion",description:"Starts an app without vizion feature (versioning control)"},{name:"\u2013-no-autorestart",description:"Starts an app without automatic restart"},{name:"\u2013-no-treekill",description:"Only kills the main process, not detached children"},{name:"\u2013-no-pmx",description:"Starts an app without apm"},{name:"\u2013-no-automation",description:"Starts an app without apm"},{name:"\u2013-trace",description:"Enables transaction tracing with km"},{name:"\u2013-disable-trace",description:"Disables transaction tracing with km"},{name:"\u2013-attach",description:"Attaches logging after your start/restart/stop/reload"},{name:"\u2013-sort",description:"Sort process according to field\u2019s name",args:{name:"field name",description:"Field_name:sort"}},{name:"\u2013-v8",description:"Enables v8 data collecting"},{name:"\u2013-event-loop-inspector",description:"Enables event-loop-inspector dump in apm"},{name:"\u2013-deep-monitoring",description:"Enables all monitoring tools (equivalent to \u2013v8 \u2013event-loop-inspector \u2013trace)"},{name:["-h","\u2013-help"],description:"Outputs usage information"}],Le={name:"pm2",description:"Daemon process manager",subcommands:[{name:"start",description:"Starts and daemonizes an app",options:j,args:{name:"file, json, stdin, app name, pm id, etc"}},{name:"trigger",description:"Deploy your json",args:[{name:"Proc Name"},{name:"Action Name"},{name:"Params",isOptional:!0}]},{name:"deploy",description:"Deploy your json",args:{name:"File or environment",template:"filepaths"}},{name:"startOrRestart",description:"Start or restart JSON file",args:W},{name:"startOrReload",description:"Start or gracefully reload JSON file",args:W},{name:"pid",description:"Return pid of the specified app or all",args:{...C,isOptional:!0}},{name:"startOrGracefulReload",description:"Start or gracefully reolad JSON file",args:W},{name:"stop",description:"Stop a process",options:j,args:{name:"id, name, all, json, stdin, etc"}},{name:"restart",description:"Restart a process",options:j,args:{name:"id, name, all, json, stdin, etc"}},{name:"scale",description:"Scale up/down a process in cluster mode depending on the `number` param",args:[C,q]},{name:"snapshot",description:"Snapshot PM2 memory"},{name:"profile",description:"Profile CPU",args:{name:"command"}},{name:"reload",description:"Reload processes (for apps using HTTP/HTTPS)",args:{name:"name or all"}},{name:"gracefulReload",description:"Gracefully reload a process. Send a \u201Cshutdown\u201D message to close all connections",args:{name:"name or all"}},{name:"id",description:"Get process id by name",args:A},{name:"delete",description:"Stops and deletes a process from pm2 process list",args:{name:"name, id, script, all, json, stdin, etc"}},{name:"sendSignal",description:"Send a system signal to the target process",args:[{name:"signal"},{name:"pm2_id or name"}]},{name:"ping",description:"Ping pm2 daemon - if not it will launch up"},{name:"updatePM2",description:"Update in-memory PM2 with local PM2"},{name:"update",description:"(alias) update in-memory PM2 with local PM2"},{name:["install","module:install"],description:"Install or update a module and run it forever",options:j,args:{name:"module or git://",isOptional:!0}},{name:"module:generate",description:"Generate a sample module in current folder",args:{...C,isOptional:!0}},{name:["uninstall","module:uninstall"],description:"Stop and uninstall a module",args:{name:"module"}},{name:["publish","module:publish"],description:"Publish the module you are currently on"},{name:"set",description:"Sets the specified config",args:[{...P,isOptional:!0},{name:"value",isOptional:!0}]},{name:"multiset",description:"Multiset eg `key1 val1 key2 val2`",args:{name:"key value",isVariadic:!0}},{name:"get",description:"Get value for the specified key",args:{...P,isOptional:!0}},{name:"conf",description:"Get / set module config values",args:[{...P,isOptional:!0},{name:"value",isOptional:!0}]},{name:"config",description:"Get / set module config values",args:[P,{name:"value",isOptional:!0}]},{name:"unset",description:"Clears the specified config key",args:P},{name:"report",description:"Give a full pm2 report for https://github.com/Unitech/pm2/issues"},{name:["link","interact"],description:"Linking action to keymetrics.io",options:j,args:[{name:"secret",isOptional:!0},{name:"public",isOptional:!0},{...A,isOptional:!0}]},{name:"unlink",description:"Linking action to keymetrics.io"},{name:"unmonitor",description:"Unmonitor target process",args:A},{name:"monitor",description:"<Unm>onitor target process",args:A},{name:"open",description:"Open dashboard in browser"},{name:"register",description:"Create an account on keymetrics"},{name:"login",description:"Login to keymetrics and link current PM2"},{name:"web",description:"Launch a health API on 0.0.0.0:9615"},{name:["dump","save"],description:"Dump all processes for resurrecting them later"},{name:"send",description:"Send stdin to pm id",args:[{name:"pm id"},{name:"line"}]},{name:"attach",description:"Attach stdin/stdout to application identified by pm id",args:[{name:"pm id"},{name:"command",isOptional:!0}]},{name:"resurrect",description:"Resurrect previously dumped processes"},{name:"unstartup",description:"Disable and clear auto startup",args:ie},{name:"startup",description:"Setup script for pm2 at boot",args:ie},{name:"logrotate",description:"Copy default logrotate configuration"},{name:["ecosystem","init"],description:"Generate a process conf file",args:{name:"mode",isOptional:!0,suggestions:["null","simple"]}},{name:"reset",description:"Reset counters for process",args:{name:"name, id, or all"}},{name:"describe",description:"Describe all parameters of a process id",args:{name:"id"}},{name:["desc","info","show"],description:"(alias) Describe all parameters of a process id",args:{name:"id"}},{name:["list","ls"],description:"List all processes"},{name:["l","ps","status"],description:"(alias) list all processes"},{name:"jlist",description:"List all processes in JSON format"},{name:"prettylist",description:"Print json in a prettified JSON"},{name:"monit",description:"Launch termcaps monitoring"},{name:"imonit",description:"Launch legacy termcaps monitoring"},{name:["dashboard","dash"],description:"Launch dashboard with monitoring and logs"},{name:"flush",description:"Flush logs"},{name:"reloadLogs",description:"Reload all logs"},{name:"logs",description:"Stream logs logs file",options:j,args:{name:"id or name"}},{name:"kill",description:"Kill daemon"},{name:"pull",description:"Updates repository for a given app",args:[A,{name:"commit id",isOptional:!0}]},{name:"forward",description:"Updates repository to the next commit for a given app",args:A},{name:"backward",description:"Downgrades repository to the previous commit for a given app",args:A},{name:"gc",description:"Force PM2 to trigger garbage collection"},{name:"deepUpdate",description:"Performs a deep update of PM2"},{name:["serve","expose"],description:"Serves a directory over http via port",args:[{name:"path",isOptional:!0},{name:"port",isOptional:!0}]}],options:j},Ge=Le;export{Ge as default};
