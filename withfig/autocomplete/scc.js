var ne=Object.create;var K=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var ie=Object.getOwnPropertyNames;var se=Object.getPrototypeOf,re=Object.prototype.hasOwnProperty;var j=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var oe=(e,n,t,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of ie(n))!re.call(e,i)&&i!==t&&K(e,i,{get:()=>n[i],enumerable:!(s=te(n,i))||s.enumerable});return e};var ae=(e,n,t)=>(t=e!=null?ne(se(e)):{},oe(n||!e||!e.__esModule?K(t,"default",{value:e,enumerable:!0}):t,e));var $=j(k=>{"use strict";Object.defineProperty(k,"__esModule",{value:!0});k.shellExpand=k.ensureTrailingSlash=void 0;var ce=e=>e.endsWith("/")?e:`${e}/`;k.ensureTrailingSlash=ce;var le=(e,n)=>e.startsWith("~")&&(e.length===1||e.charAt(1)==="/")?e.replace("~",n):e,ue=(e,n)=>e.replace(/\$([A-Za-z0-9_]+)/g,i=>{var r;let o=i.slice(1);return(r=n[o])!==null&&r!==void 0?r:i}).replace(/\$\{([A-Za-z0-9_]+)(?::-([^}]+))?\}/g,(i,r,o)=>{var l,u;return(u=(l=n[r])!==null&&l!==void 0?l:o)!==null&&u!==void 0?u:i}),de=(e,n)=>{var t;let{environmentVariables:s}=n;return ue(le(e,(t=s?.HOME)!==null&&t!==void 0?t:"~"),s)};k.shellExpand=de});var H=j(h=>{"use strict";var fe=h&&h.__awaiter||function(e,n,t,s){function i(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function l(a){try{c(s.next(a))}catch(d){o(d)}}function u(a){try{c(s.throw(a))}catch(d){o(d)}}function c(a){a.done?r(a.value):i(a.value).then(l,u)}c((s=s.apply(e,n||[])).next())})};Object.defineProperty(h,"__esModule",{value:!0});h.filepaths=h.folders=h.getCurrentInsertedDirectory=h.sortFilesAlphabetically=void 0;var L=$();function W(e,n=[]){let t=n.map(i=>i.toLowerCase()),s=e.filter(i=>!t.includes(i.toLowerCase()));return[...s.filter(i=>!i.startsWith(".")).sort((i,r)=>i.localeCompare(r)),...s.filter(i=>i.startsWith(".")).sort((i,r)=>i.localeCompare(r)),"../"]}h.sortFilesAlphabetically=W;var ge=(e,n,t)=>{if(e===null)return"/";let s=(0,L.shellExpand)(n,t),i=s.slice(0,s.lastIndexOf("/")+1);return i===""?(0,L.ensureTrailingSlash)(e):i.startsWith("/")?i:`${(0,L.ensureTrailingSlash)(e)}${i}`};h.getCurrentInsertedDirectory=ge;function F(e={}){let{extensions:n=[],equals:t=[],matches:s,filterFolders:i=!1,editFileSuggestions:r,editFolderSuggestions:o,rootDirectory:l,showFolders:u="always"}=e,c=new Set(n),a=new Set(t),d=()=>n.length>0||t.length>0||s,y=(g=[])=>d()?g.filter(({name:p="",type:O})=>{if(!i&&O==="folder"||a.has(p)||s&&p.match(s))return!0;let[,...f]=p.split(".");if(f.length>=1){let b=f.length-1,_=f[b];do{if(c.has(_))return!0;b-=1,_=[f[b],_].join(".")}while(b>=0)}return!1}):g,x=(g=[])=>!r&&!o?g:g.map(p=>Object.assign(Object.assign({},p),(p.type==="file"?r:o)||{}));return{trigger:(g,p)=>{let O=g.lastIndexOf("/"),f=p.lastIndexOf("/");return O!==f?!0:O===-1&&f===-1?!1:g.slice(0,O)!==p.slice(0,f)},getQueryTerm:g=>g.slice(g.lastIndexOf("/")+1),custom:(g,p,O)=>fe(this,void 0,void 0,function*(){var f;let{isDangerous:b,currentWorkingDirectory:_,searchTerm:m}=O,w=(f=(0,h.getCurrentInsertedDirectory)(l??_,m,O))!==null&&f!==void 0?f:"/";try{let P=yield p({command:"ls",args:["-1ApL"],cwd:w}),ee=W(P.stdout.split(`
`),[".DS_Store"]),R=[];for(let V of ee)if(V){let A=V.endsWith("/")?"folders":"filepaths";(A==="filepaths"&&u!=="only"||A==="folders"&&u!=="never")&&R.push({type:A==="filepaths"?"file":"folder",name:V,insertValue:V,isDangerous:b,context:{templateType:A}})}return x(y(R))}catch{return[]}})}}h.folders=Object.assign(()=>F({showFolders:"only"}),Object.freeze(F({showFolders:"only"})));h.filepaths=Object.assign(F,Object.freeze(F()))});var G=j(S=>{"use strict";var T=S&&S.__awaiter||function(e,n,t,s){function i(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function l(a){try{c(s.next(a))}catch(d){o(d)}}function u(a){try{c(s.throw(a))}catch(d){o(d)}}function c(a){a.done?r(a.value):i(a.value).then(l,u)}c((s=s.apply(e,n||[])).next())})};Object.defineProperty(S,"__esModule",{value:!0});S.keyValueList=S.keyValue=S.valueList=void 0;var B=new Map;function D(e,n){return e.length===0?n:n.map(t=>t.insertValue?t:Object.assign(Object.assign({},t),{insertValue:t.name+e}))}function Q(e,n,t){return T(this,void 0,void 0,function*(){if(typeof e=="function"){let s=yield e(...t);return D(n,s)}if(typeof e[0]=="string"){let s=e.map(i=>({name:i}));return D(n,s)}return D(n,e)})}function E(e,n,t,s){return T(this,void 0,void 0,function*(){if(t||Array.isArray(e)){let i=B.get(e);return i===void 0&&(i=yield Q(e,n,s),B.set(e,i)),i}return Q(e,n,s)})}function J(e,n){return typeof n=="string"?e&&n==="keys"||!e&&n==="values":n}function M(e,...n){return Math.max(...n.map(t=>e.lastIndexOf(t)))}function q(e,n){let t=new Set(e);return n.filter(s=>{var i;return typeof s.name=="string"?!t.has(s.name):!(!((i=s.name)===null||i===void 0)&&i.some(r=>t.has(r)))})}function me({delimiter:e=",",values:n=[],cache:t=!1,insertDelimiter:s=!1,allowRepeatedValues:i=!1}){return{trigger:(r,o)=>r.lastIndexOf(e)!==o.lastIndexOf(e),getQueryTerm:r=>r.slice(r.lastIndexOf(e)+e.length),custom:(...r)=>T(this,void 0,void 0,function*(){var o;let l=yield E(n,s?e:"",t,r);if(i)return l;let[u]=r,c=(o=u[u.length-1])===null||o===void 0?void 0:o.split(e);return q(c,l)})}}S.valueList=me;function pe({separator:e="=",keys:n=[],values:t=[],cache:s=!1,insertSeparator:i=!0}){return{trigger:(r,o)=>r.indexOf(e)!==o.indexOf(e),getQueryTerm:r=>r.slice(r.indexOf(e)+1),custom:(...r)=>T(this,void 0,void 0,function*(){let[o]=r,u=!o[o.length-1].includes(e),c=u?n:t,a=J(u,s);return E(c,u&&i?e:"",a,r)})}}S.keyValue=pe;function ye({separator:e="=",delimiter:n=",",keys:t=[],values:s=[],cache:i=!1,insertSeparator:r=!0,insertDelimiter:o=!1,allowRepeatedKeys:l=!1,allowRepeatedValues:u=!0}){return{trigger:(c,a)=>{let d=M(c,e,n),y=M(a,e,n);return d!==y},getQueryTerm:c=>{let a=M(c,e,n);return c.slice(a+1)},custom:(...c)=>T(this,void 0,void 0,function*(){let[a]=c,d=a[a.length-1],y=M(d,e,n),x=y===-1||d.slice(y,y+e.length)!==e,g=x?t:s,p=J(x,i),f=yield E(g,x?r?e:"":o?n:"",p,c);if(x){if(l)return f;let _=d.split(n).map(m=>m.slice(0,m.indexOf(e)));return q(_,f)}if(u)return f;let b=d.split(n).map(_=>_.slice(_.indexOf(e)+e.length));return q(b,f)})}}S.keyValueList=ye});var U=j(C=>{"use strict";var he=C&&C.__awaiter||function(e,n,t,s){function i(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function l(a){try{c(s.next(a))}catch(d){o(d)}}function u(a){try{c(s.throw(a))}catch(d){o(d)}}function c(a){a.done?r(a.value):i(a.value).then(l,u)}c((s=s.apply(e,n||[])).next())})};Object.defineProperty(C,"__esModule",{value:!0});C.ai=void 0;var ve=4097,be=4,Oe=.8,_e=ve*be*Oe;function xe({name:e,prompt:n,message:t,postProcess:s,temperature:i,splitOn:r}){return{scriptTimeout:15e3,custom:(o,l,u)=>he(this,void 0,void 0,function*(){var c,a;let d=yield l({command:"fig",args:["settings","--format","json","autocomplete.ai.enabled"]});if(!JSON.parse(d.stdout))return[];let y=typeof n=="function"?yield n({tokens:o,executeCommand:l,generatorContext:u}):n,x=typeof t=="function"?yield t({tokens:o,executeCommand:l,generatorContext:u}):t;if(x===null||x.length===0)return console.warn("No message provided to AI generator"),[];let g=_e-((c=y?.length)!==null&&c!==void 0?c:0),p={model:"gpt-3.5-turbo",source:"autocomplete",name:e,messages:[...y?[{role:"system",content:y}]:[],{role:"user",content:x.slice(0,g)}],temperature:i},O=JSON.stringify(p),f=yield l({command:"fig",args:["_","request","--route","/ai/chat","--method","POST","--body",O]}),b=JSON.parse(f.stdout);return(a=b?.choices.map(m=>{var w;return(w=m?.message)===null||w===void 0?void 0:w.content}).filter(m=>typeof m=="string").flatMap(m=>r?m.split(r).filter(w=>w.trim().length>0):[m]).map(m=>{if(s)return s(m);let w=m.trim().replace(/\n/g," ");return{icon:"\u{1FA84}",name:w,insertValue:`'${w}'`,description:"Generated by Fig AI"}}))!==null&&a!==void 0?a:[]})}}C.ai=xe});var Z=j(v=>{"use strict";var we=v&&v.__createBinding||(Object.create?function(e,n,t,s){s===void 0&&(s=t);var i=Object.getOwnPropertyDescriptor(n,t);(!i||("get"in i?!n.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,s,i)}:function(e,n,t,s){s===void 0&&(s=t),e[s]=n[t]}),Se=v&&v.__exportStar||function(e,n){for(var t in e)t!=="default"&&!Object.prototype.hasOwnProperty.call(n,t)&&we(n,e,t)};Object.defineProperty(v,"__esModule",{value:!0});v.ai=v.folders=v.filepaths=void 0;var X=H();Object.defineProperty(v,"filepaths",{enumerable:!0,get:function(){return X.filepaths}});Object.defineProperty(v,"folders",{enumerable:!0,get:function(){return X.folders}});Se(G(),v);var Ie=U();Object.defineProperty(v,"ai",{enumerable:!0,get:function(){return Ie.ai}})});var I=ae(Z(),1);function z(e){let n={},t=[],s=e.matchAll(/^(.*) \((.*)\)$/gm);for(let i of s){let r=i[1];t.push(r);let o=i[2].split(",");for(let l of o)n[l]=r}return{extensions:n,languages:t}}var N=async(e,n)=>{let{stdout:t}=await n({command:"scc",args:["--language"]}),{languages:s}=z(t);return s.map(i=>({name:i}))},Y=[{name:"tabular",icon:"fig://icon?type=string"},{name:"wide",icon:"fig://icon?type=string"},{name:"json",icon:"fig://icon?type=string"},{name:"csv",icon:"fig://icon?type=string"},{name:"csv-stream",icon:"fig://icon?type=string"},{name:"cloc-yaml",icon:"fig://icon?type=string"},{name:"html",icon:"fig://icon?type=string"},{name:"html-table",icon:"fig://icon?type=string"},{name:"sql",icon:"fig://icon?type=string"},{name:"sql-insert",icon:"fig://icon?type=string"}];function ke(e){return 1024-(e-1984)*4}var Ce=ke(new Date().getFullYear()),je={name:"scc",description:"Sloc, Cloc and Code. Count lines of code in a directory with complexity estimation",options:[{name:"--avg-wage",description:"Average salary value used for COCOMO calculations",args:{name:"int",default:"56286"}},{name:"--binary",description:"Disable binary file detection"},{name:"--by-file",description:"Display output for every file"},{name:"--ci",description:"Enable CI output settings where stdout is ASCII"},{name:"--cocomo-project-type",description:'Change the COCOMO model type (allows custom models, eg. "name,1,1,1,1")',args:{name:"string",default:"organic",suggestions:[{name:"organic",icon:"fig://icon?type=string"},{name:"semi-detached",icon:"fig://icon?type=string"},{name:"embedded",icon:"fig://icon?type=string"}]}},{name:"--count-as",description:"Count a file extension as a language (comma-separated key:value list, eg. jst:js,tpl:Markdown)",args:{name:"string",generators:(0,I.keyValueList)({cache:!0,separator:":",keys:async(e,n)=>{let{stdout:t}=await n({command:"scc",args:["--language"]}),{extensions:s}=z(t);return Object.entries(s).map(([i,r])=>({name:i,description:r}))},values:N})}},{name:"--debug",description:"Enable debug output"},{name:"--exclude-dir",description:"Directories to exclude",args:{name:"strings",generators:{template:"folders",getQueryTerm:","}}},{name:"--file-gc-count",description:"Number of files to parse before turning the GC on",args:{name:"int",default:"10000"}},{name:["-f","--format"],description:"Set output format",args:{name:"string",default:"tabular",suggestions:Y}},{name:"--format-multi",description:"Multiple outputs with different formats (comma-separated key:value list, eg. tabular:stdout,csv:scc.csv)",args:{name:"string",generators:(0,I.keyValueList)({separator:":",keys:Y,values:async(e,n)=>{let{stdout:t}=await n({command:"ls",args:["-lAF1"]}),s=t.split(`
`).map(i=>({name:i.slice(i.lastIndexOf("/")+1),icon:`fig://path/${i}`}));return s.push({name:"stdout",priority:75}),s}})}},{name:"--gen",description:"Identify generated files"},{name:"--generated-markers",insertValue:"--generated-markers '{cursor}'",description:"Identify generated files by the presence of a string (comma-separated list)",args:{name:"strings",default:"do not edit,<auto-generated />"}},{name:["-h","--help"],description:"Help for scc"},{name:["-i","--include-ext"],description:"Limit to these file extensions (comma-separated list)",args:{name:"strings",generators:(0,I.valueList)({cache:!0,values:async(e,n)=>{let{stdout:t}=await n({command:"scc",args:["--language"]}),{extensions:s}=z(t);return Object.entries(s).map(([i,r])=>({name:i,description:r,icon:"fig://icon?type=string"}))}})}},{name:"--include-symlinks",description:"Count symbolic links"},{name:["-l","--languages"],description:"Print supported languages and extensions"},{name:"--large-byte-count",description:"Number of bytes a file can contain before being omitted",args:{name:"int",default:"1000000"}},{name:"--large-line-count",description:"Number of lines a file can contain before being omitted",args:{name:"int",default:"40000"}},{name:"--min",description:"Identify minified files"},{name:["-z","--min-gen"],description:"Identify minified or generated files"},{name:"--min-gen-line-length",description:"Number of bytes per average line for file to be considered minified or generated",args:{name:"int",default:"255"}},{name:"--no-cocomo",description:"Skip COCOMO calculation"},{name:["-c","--no-complexity"],description:"Skip code complexity calculation"},{name:["-d","--no-duplicates"],description:"Remove duplicate files from stats and output"},{name:"--no-gen",description:"Ignore generated files in output (implies --gen)"},{name:"--no-gitignore",description:"Disables .gitignore file logic"},{name:"--no-ignore",description:"Disables .ignore file logic"},{name:"--no-large",description:"Ignore files over certain byte and line size set by --max-line-count and --max-byte-count"},{name:"--no-min",description:"Ignore minified files in output (implies --min)"},{name:"--no-min-gen",description:"Ignore minified or generated files in output (implies --min-gen)"},{name:"--no-size",description:"Remove size calculation output"},{name:["-M","--not-match"],insertValue:"-M '{cursor}'",description:"Ignore files and directories matching regular expression",args:{name:"regex"}},{name:["-o","--output"],description:"Output filename (defaults to stdout if not provided)",args:{name:"string",template:"filepaths"}},{name:"--remap-all",description:'Inspect every file and set its type by checking for a string (comma-separated key:value list, eg. "-*- C++ -*-":"C Header")',args:{name:"string",generators:(0,I.keyValueList)({cache:!0,separator:":",values:N})}},{name:"--remap-unknown",description:'Inspect files of unknown type and set its type by checking for a string (comma-separated key:value list, eg. "-*- C++ -*-":"C Header")',args:{name:"string",generators:(0,I.keyValueList)({cache:!0,separator:":",values:N})}},{name:"--size-unit",description:"Set the unit used for file size output",args:{name:"string",description:"See https://xkcd.com/394/",default:"si",suggestions:[{name:"si",icon:"fig://icon?type=string",description:"1000^2 bytes"},{name:"binary",icon:"fig://icon?type=string",description:"1024^2 bytes"},{name:"mixed",icon:"fig://icon?type=string",description:"1,024,000 bytes (Binary kilobytes, SI megabytes)"},{name:"xkcd-kb",icon:"fig://icon?type=string",description:"1000 bytes during leap years, 1024 otherwise"},{name:"xkcd-kelly",icon:"fig://icon?type=string",description:"1012 bytes (a compromise between 1000 and 1024 bytes)"},{name:"xkcd-imaginary",icon:"fig://icon?type=string",description:"1024*sqrt(-1) bytes (used in quantum computing)"},{name:"xkcd-intel",icon:"fig://icon?type=string",description:"1023.937528 bytes (calculated on Pentium FPU)"},{name:"xkcd-drive",icon:"fig://icon?type=string",description:`Currently ${Ce} bytes (shrinks by 4 each year for marketing reasons)`},{name:"xkcd-bakers",icon:"fig://icon?type=string",description:"1152 bytes (9 bits per byte, because you're such a good customer)"}]}},{name:["-s","--sort"],description:"Column to sort by",args:{name:"string",default:"files",suggestions:[{name:"files",icon:"fig://icon?type=string"},{name:"name",icon:"fig://icon?type=string"},{name:"lines",icon:"fig://icon?type=string"},{name:"blanks",icon:"fig://icon?type=string"},{name:"code",icon:"fig://icon?type=string"},{name:"comments",icon:"fig://icon?type=string"},{name:"complexity",icon:"fig://icon?type=string"}]}},{name:"--sql-project",description:"Use supplied name as the project identifier for the current run. Only valid with the '--format sql' or '--format sql-insert' option",args:{name:"string"}},{name:["-t","--trace"],description:"Enable trace output (not recommended when processing multiple files)"},{name:["-v","--verbose"],description:"Verbose output"},{name:"--version",description:"Version for scc"},{name:["-w","--wide"],description:"Wider output with additional statistics (implies --complexity)"}],args:{name:"files or directories",template:["filepaths","folders"],isOptional:!0,isVariadic:!0}},qe=je;export{qe as default};
