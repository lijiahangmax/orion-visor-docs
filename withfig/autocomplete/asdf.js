var a=n=>({script:["asdf","plugin-list"],postProcess:r=>r.split(`
`).map(e=>({name:`${e}`,description:"Plugin name",priority:76,icon:"fig://icon?type=package",...n}))}),f=n=>({custom:async(r,e,i)=>{let{stdout:o}=await e({command:"ls",args:["-1",`${i.environmentVariables.HOME}/.asdf/repository/plugins`]});return o.split(`
`).map(m=>({name:`${m}`,description:"Plugin name",priority:76,icon:"fig://icon?type=package",...n}))}}),s=(n,r)=>({script:e=>["asdf","list",e[e.length-2]],postProcess:e=>e.split(`
`).reverse().map(i=>({name:`${i}`.trim(),description:"Plugin version",priority:76,icon:"fig://icon?type=commit",...n})),...r}),v=(n,r)=>({script:e=>["asdf","list-all",e[e.length-2]],cache:{ttl:36e5},postProcess:e=>e.split(`
`).reverse().map(i=>({name:`${i}`.trim(),description:"Plugin version",priority:76,icon:"fig://icon?type=commit",...n})),...r}),t=n=>({custom:async(r,e,i)=>{let{stdout:o}=await e({command:"ls",args:["-1",`${i.environmentVariables.HOME}/.asdf/shims`]});return o.split(`
`).map(m=>({name:`${m}`,description:"Shim name",priority:76,icon:"fig://icon?type=command",...n}))}}),l={description:"Add a plugin from the plugin repo OR, add a Git repo as a plugin by specifying the name and repo url",args:[{name:"name",generators:f()},{name:"git-url",isOptional:!0}]},O={description:"List plugins registered on asdf-plugins repository with URLs"},g={description:"List installed plugins. Optionally show git urls and git-ref",options:[{name:"--urls",description:"Show git urls"},{name:"--refs",description:"Show git refs"}],subcommands:[{name:"all",...O}]},p={description:"Remove plugin and package versions",args:{name:"name",generators:a({isDangerous:!0})}},c={description:"Update a plugin to latest commit on default branch or a particular git-ref",args:[{name:"name",isOptional:!0,isDangerous:!0},{name:"git-ref",isOptional:!0,isDangerous:!0}],options:[{name:"--all",description:"Update all plugins to latest commit on default branch",isDangerous:!0}]},u={description:"List all available (remote) versions of a package",args:[{name:"name",generators:a()},{name:"version",generators:s(),isOptional:!0}]},d={description:"List for given command which plugins and versions provide it",args:{name:"command",generators:t()}},h={name:"asdf",description:"Extendable version manager with support for Ruby, Node.js, Elixir, Erlang & more",subcommands:[{name:"plugin",description:"Plugin management sub-commands",subcommands:[{name:"add",...l},{name:"list",...g},{name:"remove",...p},{name:"update",...c}]},{name:"plugin-add",...l},{name:"plugin-list",...g},{name:"plugin-list-all",...O},{name:"plugin-remove",...p},{name:"plugin-update",...c},{name:"install",description:"Install plugin at stated version, or all from .tools-versions",args:[{name:"name",generators:a(),isOptional:!0},{name:"version",suggestions:[{name:"latest",isDangerous:!0}],generators:v(void 0,{getQueryTerm:n=>n.includes("latest")?n.slice(n.indexOf(":")+1):n}),isOptional:!0}]},{name:"uninstall",description:"Remove a specific version of a package",args:[{name:"name",generators:a({isDangerous:!0})},{name:"version",generators:s({isDangerous:!0}),isOptional:!0}]},{name:"current",description:"Display current versions for named package (else all)",args:{name:"name",isOptional:!0,generators:a()}},{name:"where",description:"Display install path for given package at optional specified version",args:[{name:"name",generators:a()},{name:"version",generators:s(),isOptional:!0}]},{name:"which",description:"Display path to an executable",args:{name:"command",generators:t()}},{name:"local",description:"Set package local version",args:[{name:"name",generators:a()},{name:"version",generators:s()}]},{name:"global",description:"Set package global version",args:[{name:"name",generators:a()},{name:"version",generators:s()}]},{name:"shell",description:"Set the package version to ASDF_${LANG}_VERSION` in the current shell",args:[{name:"name",generators:a()},{name:"version",generators:s()}]},{name:"latest",description:"Display latest version available to install for a named package",args:[{name:"name",generators:a()},{name:"version",generators:s(),isOptional:!0}]},{name:"list",description:"List installed versions of a package",args:{name:"name",generators:a()},subcommands:[{name:"all",priority:77,...u}]},{name:"list-all",...u},{name:"help",description:"Output documentation for plugin and tool",args:[{name:"name",generators:a()},{name:"version",generators:s(),isOptional:!0}]},{name:"exec",description:"Executes the command shim for the current version",args:{name:"command",generators:t(),isCommand:!0}},{name:"env",description:"Prints or runs an executable under a command environment",args:{name:"command",generators:t()}},{name:"info",description:"Print os, shell and asdf debug information"},{name:"reshim",description:"Recreate shims for version of a package",args:[{name:"name",generators:a(),isOptional:!0},{name:"version",generators:s(),isOptional:!0}]},{name:"shim",description:"Shim management sub-commands",subcommands:[{name:"versions",...d}]},{name:"shim-versions",...d},{name:"update",description:"Update ASDF to the latest stable release (unless --head)",options:[{name:"--head",description:"Using HEAD commit",isDangerous:!0}]},{name:"version",description:"Version for asdf"}],options:[{name:"--version",description:"Version for asdf"},{name:["-h","--help"],description:"Help for asdf"}]},S=h;export{S as default};
