var o=a=>({cache:{strategy:"stale-while-revalidate"},script:["mdfind","kMDItemContentTypeTree=com.apple.application-bundle","-onlyin",a],postProcess:s=>s.split(`
`).map(e=>{let t=e.slice(e.lastIndexOf("/")+1);return{name:t,description:e,icon:`fig://path/${e}`,priority:e.endsWith(`/Applications/${t}`)?80:e.startsWith("/Applications")?76:50}})}),r=a=>({scriptTimeout:15e3,cache:{strategy:"stale-while-revalidate"},script:["bash","-c",`mdfind kMDItemContentTypeTree=com.apple.application-bundle -onlyin ${a} | while read line; do echo $(mdls -name kMDItemCFBundleIdentifier -r "$line") $line; done`],postProcess:s=>{let e=new Map(s.split(`
`).map(n=>{let i=n.indexOf(" ");return[n.slice(0,i),n.slice(i+1)]}));e.delete("(null)");let t=[];for(let[n,i]of e.entries())t.push({name:n,description:i,icon:`fig://${i}`});return t}}),p={name:"open",description:"Open files, apps, or URLs using default application",options:[{name:"-a",description:"Specify the application to use for opening the file",args:{name:"Application",generators:o("/")}},{name:"-b",description:"Specify the bundle identifier of the app to use to open the file",args:{name:"Bundle Identifier",generators:r("/")}},{name:"-D",description:"Reveals the enclosing folder in finder"},{name:"-e",description:"Opens the file with /Applications/TextEdit"},{name:"-t",description:"Open the file with the default text editor"},{name:"-f",description:"Read input from standard input and open the results in the default text editor"},{name:["-F","--fresh"],description:"Opens the application without restoring windows"},{name:["-W","--wait-apps"],description:"Waits until the applications exit"},{name:["-R","--reveal"],description:"Reveals the file(s) in the Finder instead of opening them"},{name:["-n","--new"],description:"Open a new instance of the application(s) even if one is already running"},{name:["-j","--hide"],description:"Launches the app hidden"},{name:["-g","--background"],description:"Do not bring the application to the foreground"},{name:["-h","--header"],description:"Searches header locations for a header whose name matches the given string and then opens it"},{name:"-s",description:"For -h, the SDK to use; if supplied, only SDKs whose names contain the argument value are searched",args:{name:"partial SDK name"}},{name:["-u","--url"],description:"Open this URL, even if it matches exactly a filepath",args:{name:"URL"}},{name:["-i","--stdin"],description:"Launches the application with stdin connected to PATH; defaults to /dev/null",args:{name:"PATH",template:"filepaths",default:"/dev/null"}},{name:["-o","--stdout"],description:"Launches the application with /dev/stdout connected to PATH",args:{name:"PATH",template:"filepaths",default:"/dev/null"}},{name:"--stderr",description:"Launches the application with /dev/stderr connected to PATH",args:{name:"PATH",template:"filepaths",default:"/dev/null"}},{name:"--env",description:"Add an enviroment variable to the launched process, where VAR is formatted AAA=foo",isRepeatable:!0,args:{name:"VAR"}},{name:"--args",description:"All remaining arguments are passed to the opened application in the argv parameter to main().  These arguments are not opened or interpreted by the open tool",args:{name:"Arguments",isVariadic:!0}}],args:{template:["filepaths","folders"],isVariadic:!0}},d=p;export{d as default,o as generateApps,r as generateBundleIds};
