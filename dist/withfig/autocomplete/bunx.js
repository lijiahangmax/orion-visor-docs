var s={name:"autocannon",description:"Fast HTTP/1.1 benchmarking tool written in Node.js",icon:"https://raw.githubusercontent.com/mcollina/autocannon/master/autocannon-logo-icon-100px.png",args:{name:"URL",description:"The URL to benchmark"},options:[{name:["-c","--connections"],description:"The number of concurrent connections to use",args:{name:"NUM",default:"10"}},{name:["-p","--pipelining"],description:"The number of pipelined requests to use",args:{name:"NUM",default:"1"}},{name:["-d","--duration"],description:"The number of seconds to run the autocannon",exclusiveOn:["-a","--amount"],args:{name:"SEC",default:"10"}},{name:["-a","--amount"],description:"The number of requests to make before exiting the benchmark",exclusiveOn:["-d","--duration"],args:{name:"NUM"}},{name:"-L",description:"The number of milliseconds to elapse between taking samples. This controls the sample interval, & therefore the total number of samples, which affects statistical analyses",args:{name:"NUM",default:"1"}},{name:["-S","--socketPath"],description:"A path to a Unix Domain Socket or a Windows Named Pipe. A URL is still required to send the correct Host header and path",args:{name:"PATH"}},{name:["-w","--workers"],description:"Number of worker threads to use to fire requests",args:{name:"NUM",default:"1"}},{name:["-W","--warmup"],description:"Use a warm up interval before starting sampling. This enables startup processes to finish and traffic to normalize before sampling begins",args:[{name:"-c",default:"1"},{name:"-d",default:"3"}]},{name:"--on-port",description:"Start the command listed after -- on the command line. When it starts listening on a port, start sending requests to that port. A URL is still required to send requests to the correct path. The hostname can be omitted, `localhost` will be used by default",args:{name:"PORT"}},{name:["-m","--method"],description:"The HTTP method to use",args:{name:"METHOD",default:"GET",suggestions:["GET","POST","PUT","DELETE","PATCH","HEAD","OPTIONS","TRACE"]}},{name:["-t","--timeout"],description:"The number of seconds before timing out and resetting a connection",args:{name:"NUM",default:"10"}},{name:["-T","--title"],description:"The title to place in the results for identification",args:{name:"TITLE"}},{name:["-b","--body"],description:"The body of the request",dependsOn:["-H","--headers"],args:{name:"BODY"}},{name:["-F","--form"],args:{name:"FORM"}},{name:["-i","--input"],description:"The body of the request",dependsOn:["-H","--headers"],args:{name:"FILE",generators:{template:"filepaths"}}},{name:["-H","--headers"],description:"The request headers",isRepeatable:!0,args:{name:"K=V"}},{name:"--har",description:"When provided, Autocannon will use requests from the HAR file",args:{name:"FILE",template:"filepaths"}},{name:["-B","--bailout"],description:"The number of failures before initiating a bailout",args:{name:"NUM",default:"0"}},{name:["-M","--maxConnectionRequests"],description:"The max number of requests to make per connection to the server",args:{name:"NUM"}},{name:["-O","--maxOverallRequests"],description:"The max number of requests to make overall to the server",args:{name:"NUM"}},{name:["-r","--connectionRate"],description:"The max number of requests to make per second from an individual connection",args:{name:"NUM"}},{name:["-R","--overallRate"],description:"The max number of requests to make per second from all connections",args:{name:"NUM"}},{name:["-C","--ignoreCoordinatedOmission"],description:"Ignore the coordinated omission issue when requests should be sent at a fixed rate using 'connectionRate' or 'overallRate'"},{name:["-D","--reconnectRate"],description:"The number of requests to make before resetting a connections connection to the server",args:{name:"NUM"}},{name:["-n","--no-progress"],description:"Don't render the progress bar. default: false"},{name:["-l","--latency"],description:"Print all the latency data. default: false"},{name:["-I","--idReplacement"],description:"Enable replacement of [<id>] with a randomly generated ID within the request body. default: false"},{name:["-j","--jsonPath"],description:"Print the output as newline delimited JSON. This will cause the progress bar and results not to be rendered"},{name:["-f","--forever"],description:"Run the benchmark forever. Efficiently restarts the benchmark on completion"},{name:["-s","--servername"],description:"Server name for the SNI (Server Name Indication) TLS extension. Defaults to the hostname of the URL when it is not an IP address"},{name:["-x","--excludeErrorStats"],description:"Exclude error statistics (non-2xx HTTP responses) from the final latency and bytes per second averages. default: false"},{name:["-E","--expectBody"],description:"Ensure the body matches this value. If enabled, mismatches count towards bailout. Enabling this option will slow down the load testing",args:{name:"EXPECTED"}},{name:"--renderStatusCodes",description:"Print status codes and their respective statistics"},{name:"--cert",description:"Path to cert chain in pem format",args:{name:"FILE",template:"filepaths"}},{name:"--key",description:"Path to private key for specified cert in pem format",args:{name:"FILE",template:"filepaths"}},{name:"--ca",description:"Path to trusted ca certificates for the test. This argument accepts both a single file as well as a list of files",args:{name:"FILE",template:"filepaths",isVariadic:!0}},{name:"--debug",description:"Print connection errors to stderr"},{name:["-v","--version"],description:"Print the version number"},{name:["-V","--verbose"],description:"Print the table with results (default: true)"},{name:["-h","--help"],description:"Print help"}]},n=s;var t=[{name:n.name,..."icon"in n&&{icon:n.icon}},{name:"vite",icon:"https://vitejs.dev/logo.svg"},{name:"babel",icon:"https://raw.githubusercontent.com/babel/logo/master/babel.png"},{name:"create-react-native-app",icon:"https://reactnative.dev/img/pwa/manifest-icon-512.png"},{name:"react-native",icon:"https://reactnative.dev/img/pwa/manifest-icon-512.png"},{name:"tailwindcss",icon:"https://tailwindcss.com/favicons/favicon-32x32.png"},{name:"next",icon:"https://nextjs.org/static/favicon/favicon-16x16.png"},{name:"nuxi",icon:"https://raw.githubusercontent.com/nuxt/framework/main/docs/public/icon.png"},{name:"gltfjsx",icon:"https://raw.githubusercontent.com/pmndrs/branding/master/logo.svg"},{name:"prisma",icon:"https://raw.githubusercontent.com/prisma/docs/main/src/images/favicon-16x16.png"},{name:"eslint",icon:"https://raw.githubusercontent.com/eslint/eslint.org/main/src/static/icon-512.png"},{name:"prettier",icon:"https://prettier.io/icon.png"},{name:"tsc",icon:"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Typescript_logo_2020.svg/240px-Typescript_logo_2020.svg.png"},{name:"typeorm",icon:"https://avatars.githubusercontent.com/u/20165699?s=200&v=4"},{name:"@withfig/autocomplete-tools",icon:"https://fig.io/icons/fig-light.png"},{name:"create-completion-spec",icon:"https://fig.io/icons/fig-light.png"},{name:"@fig/publish-spec-to-team",icon:"https://fig.io/icons/fig-light.png"},{name:"fig-teams@latest",icon:"https://fig.io/icons/fig-light.png"},{name:"create-next-app",icon:"https://nextjs.org/static/favicon/favicon-16x16.png"},{name:"create-t3-app",icon:"https://create.t3.gg/favicon.svg"},{name:"create-discord-bot",icon:"https://discordjs.dev/favicon-32x32.png"},{name:"create-video",icon:"https://raw.githubusercontent.com/remotion-dev/remotion/main/packages/docs/static/img/logo-small.png"},{name:"remotion",icon:"https://raw.githubusercontent.com/remotion-dev/remotion/main/packages/docs/static/img/logo-small.png"},{name:"create-remix",icon:"https://remix.run/favicon-light.1.png"},{name:"remix",icon:"https://remix.run/favicon-light.1.png"},{name:"playwright",icon:"https://playwright.dev/img/playwright-logo.svg"},{name:"ignite-cli",icon:"\u{1F525}"},{name:"vsce"},{name:"degit",icon:"fig://icon?type=git"},{name:"@preset/cli",icon:"https://raw.githubusercontent.com/preset/preset/main/.github/assets/logo.svg"},{name:"mikro-orm",icon:"https://raw.githubusercontent.com/mikro-orm/mikro-orm/master/docs/static/img/favicon.ico"},{name:"pod-install"},{name:"capacitor",icon:"https://capacitorjs.com/docs/img/meta/favicon.png"},{name:"cap",icon:"https://capacitorjs.com/docs/img/meta/favicon.png"},{name:"@magnolia/cli",icon:"https://avatars.githubusercontent.com/u/25686615?s=200&v=4"},{name:"stencil",icon:"https://stenciljs.com/assets/icon/favicon.ico"},{name:"swagger-typescript-api",icon:"https://static1.smartbear.co/swagger/media/assets/swagger_fav.png"},{name:"sta",icon:"https://static1.smartbear.co/swagger/media/assets/swagger_fav.png"},{name:"@wordpress/create-block",icon:"https://s1.wp.com/i/webclip.png"},{name:"astro",icon:"https://astro.build/favicon.svg"}],p={name:"npx",description:"Execute binaries from npm packages",args:{name:"command",isCommand:!0,generators:{script:["bash","-c","until [[ -d node_modules/ ]] || [[ $PWD = '/' ]]; do cd ..; done; ls -1 node_modules/.bin/"],postProcess:function(a){let i=[...t].reduce((e,{name:o})=>[...e,o],[]);return a.split(`
`).filter(e=>!i.includes(e)).map(e=>({name:e,icon:"fig://icon?type=command",loadSpec:e}))}},suggestions:[...t],isOptional:!0},options:[{name:["--package","-p"],description:"Package to be installed",args:{name:"package"}},{name:"--cache",args:{name:"path",template:"filepaths"},description:"Location of the npm cache"},{name:"--always-spawn",description:"Always spawn a child process to execute the command"},{name:"-y",description:"Execute npx command without prompting for confirmation"},{description:"Skip installation if a package is missing",name:"--no-install"},{args:{name:"path",template:"filepaths"},description:"Path to user npmrc",name:"--userconfig"},{name:["--call","-c"],args:{name:"script"},description:"Execute string as if inside `npm run-script`"},{name:["--shell","-s"],description:"Shell to execute the command with, if any",args:{name:"shell",suggestions:[{name:"bash"},{name:"fish"},{name:"zsh"}]}},{args:{name:"shell-fallback",suggestions:[{name:"bash"},{name:"fish"},{name:"zsh"}]},name:"--shell-auto-fallback",description:'Generate shell code to use npx as the "command not found" fallback'},{name:"--ignore-existing",description:"Ignores existing binaries in $PATH, or in the localproject. This forces npx to do a temporary install and use the latest version"},{name:["--quiet","-q"],description:"Suppress output from npx itself. Subcommands will not be affected"},{name:"--npm",args:{name:"path to binary",template:"filepaths"},description:"Npm binary to use for internal operations"},{args:{},description:"Extra node argument when calling a node binary",name:["--node-arg","-n"]},{description:"Show version number",name:["--version","-v"]},{description:"Show help",name:["--help","-h"]}]};var r={name:"bunx",args:{name:"command",isCommand:!0,generators:{script:["bash","-c","until [[ -d node_modules/ ]] || [[ $PWD = '/' ]]; do cd ..; done; ls -1 node_modules/.bin/`"],postProcess:function(a){let i=[...t].reduce((e,{name:o})=>[...e,o],[]);return a.split(`
`).filter(e=>!i.includes(e)).map(e=>({name:e,icon:"fig://icon?type=command",loadSpec:e}))}},description:"The command to run",suggestions:[...t]}},g=r;export{g as default};
