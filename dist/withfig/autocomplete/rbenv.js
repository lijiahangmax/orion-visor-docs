var t={script:["rbenv","install","-L"],postProcess:function(e){return e.split(`
`).map(n=>({name:n}))}},i={script:["rbenv","versions","--bare"],postProcess:function(e){return e.split(`
`).map(n=>({name:n}))}},s=(e,n=!1)=>({name:"version",isOptional:!n,generators:e}),o=[{name:"--unset"}],a={name:"rbenv",description:"Pick a Ruby version for your application and guarantee that your development environment matches production",subcommands:[{name:"commands",description:"List all available rbenv commands",options:[{name:"--sh"},{name:"--no-sh"}]},{name:"global",description:"Set or show the global Ruby version",args:s(i),options:o},{name:"install",description:"Install a Ruby version using ruby-build",args:s(t,!0),options:[{name:"--version",description:"Show version of ruby-build",args:s()}]},{name:"local",description:"Set or show the local application-specific Ruby version",args:s(i),options:o},{name:"rehash",description:"Rehash rbenv shims (run this after installing executables)"},{name:"shell",description:"Set or show the shell-specific Ruby version",args:s(i)},{name:"uninstall",description:"Uninstall a specific Ruby version",options:[{name:"-f",description:"If the version does not exist, do not display an error message",args:{}}]},{name:"versions",description:"List installed Ruby versions"},{name:"whence",description:"List all Ruby versions that contain the given executable"},{name:"which",description:"Display the full path to an executable",args:{name:"command"}}]},r=a;export{r as default};
