var a=["hup","int","quit","ill","trap","abrt","emt","fpe","kill","bus","segv","sys","pipe","alrm","urg","stop","tstp","cont","chld","ttin","ttou","io","xcpu","xfsz","vtalrm","prof","winch","info","usr1","usr2"],p={name:"killall",description:"Kill processes by name",args:{name:"process_name",isVariadic:!0,generators:{script:["bash","-c","ps -A -o comm | sort -u"],postProcess:s=>s.trim().split(`
`).map(e=>{let i=e.indexOf(".app/"),t=i!==-1,n=e.slice(e.lastIndexOf("/")+1),r=new Set(n);return{name:n,description:e,priority:!["(","_","."].some(o=>r.has(o))&&t?51:40,icon:t?"fig://"+e.slice(0,i+4):"fig://icon?type=gear"}})}},options:[{name:"-d",description:"Be verbose (dry run) and display number of user processes"},{name:"-e",description:"Use the effective user ID instead of the real user ID for matching processes with -u"},{name:"-help",description:"Display help and exit"},{name:"-I",description:"Request confirmation before killing each process"},{name:"-l",description:"List the names of the available signals and exit"},{name:"-m",description:"Match the process name as a regular expression"},{name:"-v",description:"Be verbose"},{name:"-s",description:"Be verbose (dry run)"},...a.map(s=>({name:"-SIG"+s.toUpperCase(),description:`Send ${s.toUpperCase()} instead of TERM`})),{name:"-u",description:"Limit potentially matching processes to those belonging to the user",args:{name:"user",generators:{script:["bash","-c","dscl . -list /Users | grep -v '^_'"],postProcess:s=>s.trim().split(`
`).map(e=>({name:e,icon:"fig://template?badge=\u{1F464}"}))}}},{name:"-t",description:"Limit matching processes to those running on the specified TTY",args:{name:"tty"}},{name:"-c",description:"Limit matching processes to those matching the given name",args:{name:"name"}},{name:"-q",description:"Suppress error message if no processes are matched"},{name:"-z",description:"Do not skip zombies"}]},m=p;export{m as default};
