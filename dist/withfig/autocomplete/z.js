async function f(t){let{stdout:n}=await t({command:"zsh",args:["-c","cat ${${ZSHZ_DATA:-${_Z_DATA:-${HOME}/.z}}:A}"]});return n.split(`
`).map(r=>{let[i,o,c]=r.split("|"),a=i.split("/");return{name:a[a.length-1],path:i,weight:75+Number(o)*25/9e3,time:Number(c)}})}async function h(t,n){let{stdout:r}=await n({command:"bash",args:["-c","ls -d */"]});return r.split(`
`).map(i=>{let o=i.replace("/","");return{name:o,path:`${t}/${o}`}})}function z(t,n){let r=new Set(t);return n.filter(({name:i,path:o})=>!r.has(i)&&t.every(c=>o.includes(c)))}var w={name:"z",description:"CLI tool to jump around directories",args:{name:"directory",isVariadic:!0,isOptional:!0,generators:{custom:async(t,n,r)=>{let{currentWorkingDirectory:i}=r,[o,c]=await Promise.all([f(n),h(i,n)]),a=[...o,...c].reduce((e,s)=>(e.some(({path:m})=>m===s.path)||e.push(s),e),[]);return z(t.filter(e=>e&&e!=="z"&&!e.startsWith("-")),a).map(e=>({name:e.name,icon:"\u{1F4C1}",description:e.path,priority:e.weight,insertValue:e.name,displayName:e.name}))}}},options:[{name:"-c",description:"Restrict matches to subdirectories of the current directory"},{name:"-e",description:"Echo the best match, don't cd"},{name:"-h",description:"Show a brief help message"},{name:"-l",description:"List only"},{name:"-r",description:"Match by rank only"},{name:"-t",description:"Match by recent access only"},{name:"-x",description:"Remove the current directory from the datafile"}]},F={name:"z",description:"Smarter cd command, inspired by z and autojump",args:{name:"directory",filterStrategy:"fuzzy",suggestCurrentToken:!0,generators:{custom:async(t,n,{currentWorkingDirectory:r})=>{let i;t.length<2||t[1]===""?i=["query","--list","--score"]:i=["query","--list","--score","--",t.slice(1).join(" ")];let{stdout:o}=await n({command:"zoxide",args:i}),c=o.split(`
`).map(e=>{let s=e.trim(),m=s.indexOf(" "),l=Number(s.slice(0,m)),u=s.slice(m+1),d=u.split("/"),y=d.slice(0,d.length-1).join("/"),S=d.at(-1),g=r===y;return{name:g?S:u,description:`Score: ${l}`,icon:"\u{1F4BE}",path:u,priority:g?9e3:l}}),a=(await h(r,n)).map(({name:e,path:s})=>({name:e,description:"Score: 0",icon:"\u{1F4C1}",path:s,priority:8999}));return[...c,...a].reduce((e,s)=>(e.some(({path:m})=>m===s.path)||e.push(s),e),[])},trigger:{on:"change"}}}},b={name:"z",generateSpec:async(t,n)=>{try{let{status:r}=await n({command:"bash",args:["-c","command -v zoxide"]});if(r===0)return F}catch{}return w}},Z=b;export{Z as default};
