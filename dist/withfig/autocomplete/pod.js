var Z=Object.create;var U=Object.defineProperty;var ee=Object.getOwnPropertyDescriptor;var oe=Object.getOwnPropertyNames;var te=Object.getPrototypeOf,ne=Object.prototype.hasOwnProperty;var E=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var se=(e,o,t,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of oe(o))!ne.call(e,s)&&s!==t&&U(e,s,{get:()=>o[s],enumerable:!(n=ee(o,s))||n.enumerable});return e};var ie=(e,o,t)=>(t=e!=null?Z(te(e)):{},se(o||!e||!e.__esModule?U(t,"default",{value:e,enumerable:!0}):t,e));var q=E(S=>{"use strict";Object.defineProperty(S,"__esModule",{value:!0});S.shellExpand=S.ensureTrailingSlash=void 0;var re=e=>e.endsWith("/")?e:`${e}/`;S.ensureTrailingSlash=re;var ae=(e,o)=>e.startsWith("~")&&(e.length===1||e.charAt(1)==="/")?e.replace("~",o):e,ce=(e,o)=>e.replace(/\$([A-Za-z0-9_]+)/g,s=>{var i;let a=s.slice(1);return(i=o[a])!==null&&i!==void 0?i:s}).replace(/\$\{([A-Za-z0-9_]+)(?::-([^}]+))?\}/g,(s,i,a)=>{var l,d;return(d=(l=o[i])!==null&&l!==void 0?l:a)!==null&&d!==void 0?d:s}),le=(e,o)=>{var t;let{environmentVariables:n}=o;return ce(ae(e,(t=n?.HOME)!==null&&t!==void 0?t:"~"),n)};S.shellExpand=le});var Q=E(w=>{"use strict";var de=w&&w.__awaiter||function(e,o,t,n){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function l(r){try{c(n.next(r))}catch(p){a(p)}}function d(r){try{c(n.throw(r))}catch(p){a(p)}}function c(r){r.done?i(r.value):s(r.value).then(l,d)}c((n=n.apply(e,o||[])).next())})};Object.defineProperty(w,"__esModule",{value:!0});w.filepaths=w.folders=w.getCurrentInsertedDirectory=w.sortFilesAlphabetically=void 0;var N=q();function H(e,o=[]){let t=o.map(s=>s.toLowerCase()),n=e.filter(s=>!t.includes(s.toLowerCase()));return[...n.filter(s=>!s.startsWith(".")).sort((s,i)=>s.localeCompare(i)),...n.filter(s=>s.startsWith(".")).sort((s,i)=>s.localeCompare(i)),"../"]}w.sortFilesAlphabetically=H;var pe=(e,o,t)=>{if(e===null)return"/";let n=(0,N.shellExpand)(o,t),s=n.slice(0,n.lastIndexOf("/")+1);return s===""?(0,N.ensureTrailingSlash)(e):s.startsWith("/")?s:`${(0,N.ensureTrailingSlash)(e)}${s}`};w.getCurrentInsertedDirectory=pe;function k(e={}){let{extensions:o=[],equals:t=[],matches:n,filterFolders:s=!1,editFileSuggestions:i,editFolderSuggestions:a,rootDirectory:l,showFolders:d="always"}=e,c=new Set(o),r=new Set(t),p=()=>o.length>0||t.length>0||n,g=(m=[])=>p()?m.filter(({name:f="",type:b})=>{if(!s&&b==="folder"||r.has(f)||n&&f.match(n))return!0;let[,...u]=f.split(".");if(u.length>=1){let y=u.length-1,A=u[y];do{if(c.has(A))return!0;y-=1,A=[u[y],A].join(".")}while(y>=0)}return!1}):m,P=(m=[])=>!i&&!a?m:m.map(f=>Object.assign(Object.assign({},f),(f.type==="file"?i:a)||{}));return{trigger:(m,f)=>{let b=m.lastIndexOf("/"),u=f.lastIndexOf("/");return b!==u?!0:b===-1&&u===-1?!1:m.slice(0,b)!==f.slice(0,u)},getQueryTerm:m=>m.slice(m.lastIndexOf("/")+1),custom:(m,f,b)=>de(this,void 0,void 0,function*(){var u;let{isDangerous:y,currentWorkingDirectory:A,searchTerm:h}=b,O=(u=(0,w.getCurrentInsertedDirectory)(l??A,h,b))!==null&&u!==void 0?u:"/";try{let V=yield f({command:"ls",args:["-1ApL"],cwd:O}),K=H(V.stdout.split(`
`),[".DS_Store"]),F=[];for(let R of K)if(R){let I=R.endsWith("/")?"folders":"filepaths";(I==="filepaths"&&d!=="only"||I==="folders"&&d!=="never")&&F.push({type:I==="filepaths"?"file":"folder",name:R,insertValue:R,isDangerous:y,context:{templateType:I}})}return P(g(F))}catch{return[]}})}}w.folders=Object.assign(()=>k({showFolders:"only"}),Object.freeze(k({showFolders:"only"})));w.filepaths=Object.assign(k,Object.freeze(k()))});var J=E(C=>{"use strict";var T=C&&C.__awaiter||function(e,o,t,n){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function l(r){try{c(n.next(r))}catch(p){a(p)}}function d(r){try{c(n.throw(r))}catch(p){a(p)}}function c(r){r.done?i(r.value):s(r.value).then(l,d)}c((n=n.apply(e,o||[])).next())})};Object.defineProperty(C,"__esModule",{value:!0});C.keyValueList=C.keyValue=C.valueList=void 0;var W=new Map;function M(e,o){return e.length===0?o:o.map(t=>t.insertValue?t:Object.assign(Object.assign({},t),{insertValue:t.name+e}))}function Y(e,o,t){return T(this,void 0,void 0,function*(){if(typeof e=="function"){let n=yield e(...t);return M(o,n)}if(typeof e[0]=="string"){let n=e.map(s=>({name:s}));return M(o,n)}return M(o,e)})}function D(e,o,t,n){return T(this,void 0,void 0,function*(){if(t||Array.isArray(e)){let s=W.get(e);return s===void 0&&(s=yield Y(e,o,n),W.set(e,s)),s}return Y(e,o,n)})}function G(e,o){return typeof o=="string"?e&&o==="keys"||!e&&o==="values":o}function j(e,...o){return Math.max(...o.map(t=>e.lastIndexOf(t)))}function x(e,o){let t=new Set(e);return o.filter(n=>{var s;return typeof n.name=="string"?!t.has(n.name):!(!((s=n.name)===null||s===void 0)&&s.some(i=>t.has(i)))})}function ue({delimiter:e=",",values:o=[],cache:t=!1,insertDelimiter:n=!1,allowRepeatedValues:s=!1}){return{trigger:(i,a)=>i.lastIndexOf(e)!==a.lastIndexOf(e),getQueryTerm:i=>i.slice(i.lastIndexOf(e)+e.length),custom:(...i)=>T(this,void 0,void 0,function*(){var a;let l=yield D(o,n?e:"",t,i);if(s)return l;let[d]=i,c=(a=d[d.length-1])===null||a===void 0?void 0:a.split(e);return x(c,l)})}}C.valueList=ue;function me({separator:e="=",keys:o=[],values:t=[],cache:n=!1,insertSeparator:s=!0}){return{trigger:(i,a)=>i.indexOf(e)!==a.indexOf(e),getQueryTerm:i=>i.slice(i.indexOf(e)+1),custom:(...i)=>T(this,void 0,void 0,function*(){let[a]=i,d=!a[a.length-1].includes(e),c=d?o:t,r=G(d,n);return D(c,d&&s?e:"",r,i)})}}C.keyValue=me;function he({separator:e="=",delimiter:o=",",keys:t=[],values:n=[],cache:s=!1,insertSeparator:i=!0,insertDelimiter:a=!1,allowRepeatedKeys:l=!1,allowRepeatedValues:d=!0}){return{trigger:(c,r)=>{let p=j(c,e,o),g=j(r,e,o);return p!==g},getQueryTerm:c=>{let r=j(c,e,o);return c.slice(r+1)},custom:(...c)=>T(this,void 0,void 0,function*(){let[r]=c,p=r[r.length-1],g=j(p,e,o),P=g===-1||p.slice(g,g+e.length)!==e,m=P?t:n,f=G(P,s),u=yield D(m,P?i?e:"":a?o:"",f,c);if(P){if(l)return u;let A=p.split(o).map(h=>h.slice(0,h.indexOf(e)));return x(A,u)}if(d)return u;let y=p.split(o).map(A=>A.slice(A.indexOf(e)+e.length));return x(y,u)})}}C.keyValueList=he});var z=E(_=>{"use strict";var fe=_&&_.__awaiter||function(e,o,t,n){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function l(r){try{c(n.next(r))}catch(p){a(p)}}function d(r){try{c(n.throw(r))}catch(p){a(p)}}function c(r){r.done?i(r.value):s(r.value).then(l,d)}c((n=n.apply(e,o||[])).next())})};Object.defineProperty(_,"__esModule",{value:!0});_.ai=void 0;var ge=4097,we=4,ve=.8,ye=ge*we*ve;function be({name:e,prompt:o,message:t,postProcess:n,temperature:s,splitOn:i}){return{scriptTimeout:15e3,custom:(a,l,d)=>fe(this,void 0,void 0,function*(){var c,r;let p=yield l({command:"fig",args:["settings","--format","json","autocomplete.ai.enabled"]});if(!JSON.parse(p.stdout))return[];let g=typeof o=="function"?yield o({tokens:a,executeCommand:l,generatorContext:d}):o,P=typeof t=="function"?yield t({tokens:a,executeCommand:l,generatorContext:d}):t;if(P===null||P.length===0)return console.warn("No message provided to AI generator"),[];let m=ye-((c=g?.length)!==null&&c!==void 0?c:0),f={model:"gpt-3.5-turbo",source:"autocomplete",name:e,messages:[...g?[{role:"system",content:g}]:[],{role:"user",content:P.slice(0,m)}],temperature:s},b=JSON.stringify(f),u=yield l({command:"fig",args:["_","request","--route","/ai/chat","--method","POST","--body",b]}),y=JSON.parse(u.stdout);return(r=y?.choices.map(h=>{var O;return(O=h?.message)===null||O===void 0?void 0:O.content}).filter(h=>typeof h=="string").flatMap(h=>i?h.split(i).filter(O=>O.trim().length>0):[h]).map(h=>{if(n)return n(h);let O=h.trim().replace(/\n/g," ");return{icon:"\u{1FA84}",name:O,insertValue:`'${O}'`,description:"Generated by Fig AI"}}))!==null&&r!==void 0?r:[]})}}_.ai=be});var $=E(v=>{"use strict";var Ae=v&&v.__createBinding||(Object.create?function(e,o,t,n){n===void 0&&(n=t);var s=Object.getOwnPropertyDescriptor(o,t);(!s||("get"in s?!o.__esModule:s.writable||s.configurable))&&(s={enumerable:!0,get:function(){return o[t]}}),Object.defineProperty(e,n,s)}:function(e,o,t,n){n===void 0&&(n=t),e[n]=o[t]}),Pe=v&&v.__exportStar||function(e,o){for(var t in e)t!=="default"&&!Object.prototype.hasOwnProperty.call(o,t)&&Ae(o,e,t)};Object.defineProperty(v,"__esModule",{value:!0});v.ai=v.folders=v.filepaths=void 0;var X=Q();Object.defineProperty(v,"filepaths",{enumerable:!0,get:function(){return X.filepaths}});Object.defineProperty(v,"folders",{enumerable:!0,get:function(){return X.folders}});Pe(J(),v);var Oe=z();Object.defineProperty(v,"ai",{enumerable:!0,get:function(){return Oe.ai}})});var B=ie($(),1),Ce="https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_ruby.svg",L=(0,B.filepaths)({extensions:["podspec"],editFileSuggestions:{icon:Ce}}),Se={name:"pod",description:"CocoaPods, the Cocoa library package manager",subcommands:[{description:"Deintegrate CocoaPods from your project",name:"deintegrate",options:[{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"XCODE_PROJECT",isOptional:!0}},{description:"Manipulate the CocoaPods cache",name:"cache",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Remove the cache for pods",name:"clean",options:[{name:"--all",description:"Remove all the cached pods without asking"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME",isOptional:!0}},{description:"List the paths of pod caches for each known pod",name:"list",options:[{name:"--short",description:"Only print the path relative to the cache root"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME",isOptional:!0}}]},{description:"List pods",name:"list",options:[{name:"--update",description:"Run `pod repo update` before listing"},{name:"--stats",description:"Show additional stats (like GitHub watchers and forks)"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Setup the CocoaPods environment",name:"setup",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Manage pod specs",name:"spec",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Edit a spec file",name:"edit",options:[{name:"--regex",description:"Interpret the `QUERY` as a regular expression"},{name:"--show-all",description:"Pick from all versions of the given podspec"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"QUERY",isOptional:!0}},{description:"Create spec file stub",name:"create",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME|https://github.com/USER/REPO",isOptional:!0}},{description:"Prints a spec file",name:"cat",options:[{name:"--regex",description:"Interpret the `QUERY` as a regular expression"},{name:"--show-all",description:"Pick from all versions of the given podspec"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"QUERY",isOptional:!0}},{description:"Prints the path of the given spec",name:"which",options:[{name:"--regex",description:"Interpret the `QUERY` as a regular expression"},{name:"--show-all",description:"Print all versions of the given podspec"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"QUERY",isOptional:!0}},{description:"Validates a spec file",name:"lint",options:[{name:"--quick",description:"Lint skips checks that would require to download and build the spec",icon:"\u26A1"},{name:"--allow-warnings",icon:"\u26A0\uFE0F",description:"Lint validates even if warnings are present"},{name:"--subspec",description:"Lint validates only the given subspec",args:{name:"NAME"}},{name:"--no-subspecs",description:"Lint skips validation of subspecs"},{name:"--no-clean",description:"Lint leaves the build directory intact for inspection"},{name:"--fail-fast",description:"Lint stops on the first failing platform or subspec"},{name:"--use-libraries",description:"Lint uses static libraries to install the spec"},{name:"--use-modular-headers",description:"Lint uses modular headers during installation"},{name:"--use-static-frameworks",description:"Lint uses static frameworks during installation"},{name:"--sources",description:"The sources from which to pull dependent pods (defaults to https://cdn.cocoapods.org/). Multiple sources must be comma-delimited",args:{name:"source",suggestions:[{name:"https://cdn.cocoapods.org/",icon:"\u{1F310}"}]}},{name:"--platforms",description:"Lint against specific platforms (defaults to all platforms supported by the podspec). Multiple platforms must be comma-delimited",args:{name:"platform",suggestions:[{name:"ios",icon:"\u{1F4F1}"},{name:"macos",icon:"\u{1F4BB}"},{name:"ios,macos",icon:"\u{1F4BB}"}]}},{name:"--private",description:"Lint skips checks that apply only to public specs"},{name:"--swift-version",description:"The `SWIFT_VERSION` that should be used to lint the spec. This takes precedence over the Swift versions specified by the spec or a `.swift-version` file",args:{name:"VERSION"},icon:"https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_swift.svg"},{name:"--skip-import-validation",description:"Lint skips validating that the pod can be imported"},{name:"--skip-tests",description:"Lint skips building and running tests during validation"},{name:"--test-specs",description:"List of test specs to run",args:{name:"test-spec"}},{name:"--analyze",description:"Validate with the Xcode Static Analysis tool"},{name:"--configuration",icon:"\u{1F6E0}",description:"Build using the given configuration (defaults to Release)",args:{name:"CONFIGURATION"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME.podspec|DIRECTORY|http://PATH/NAME.podspec",isOptional:!0,generators:L}}]},{description:"Install project dependencies according to versions from a Podfile.lock",name:"install",options:[{name:"--repo-update",description:"Force running `pod repo update` before install"},{name:"--deployment",description:"Disallow any changes to the Podfile or the Podfile.lock during installation"},{name:"--clean-install",description:"Ignore the contents of the project cache and force a full pod installation. This only applies to projects that have enabled incremental installation",icon:"\u{1F6C1}"},{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Display pod environment",name:"env",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Show outdated project dependencies",name:"outdated",options:[{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--no-repo-update",description:"Skip running `pod repo update` before install"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Generate a Podfile for the current directory",name:"init",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"XCODEPROJ"}},{description:"Inter-process communication",name:"ipc",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Lists the specifications known to CocoaPods",name:"list",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Updates the search index",name:"update-search-index",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Converts a Podfile to JSON",name:"podfile-json",options:[{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"PATH",template:"filepaths"}},{description:"Converts a podspec to JSON",name:"spec",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"PATH"}},{description:"Converts a Podfile to YAML",name:"podfile",options:[{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"PATH",template:"filepaths"}},{description:"The repl listens to commands on standard input",name:"repl",options:[{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]}]},{description:"Show available CocoaPods plugins",name:"plugins",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Search for known plugins",name:"search",options:[{name:"--full",description:"Search by name  author, and description"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"QUERY"}},{description:"List plugins installed on your machine",name:"installed",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]},{description:"Creates a new plugin",name:"create",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"NAME"},{name:"TEMPLATE_URL",isOptional:!0}]},{description:"Request to add the plugin to the official plugins list",name:"publish",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]}]},{description:"Develop pods",name:"lib",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Creates a new Pod",name:"create",options:[{name:"--template-url",description:"The URL of the git repo containing a compatible template",args:{name:"URL"},icon:"\u{1F310}"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME"}},{description:"Validates a Pod",name:"lint",options:[{name:"--quick",description:"Lint skips checks that would require to download and build the spec",icon:"\u26A1"},{name:"--allow-warnings",icon:"\u26A0\uFE0F",description:"Lint validates even if warnings are present"},{name:"--subspec",description:"Lint validates only the given subspec",args:{name:"NAME"}},{name:"--no-subspecs",description:"Lint skips validation of subspecs"},{name:"--no-clean",description:"Lint leaves the build directory intact for inspection"},{name:"--fail-fast",description:"Lint stops on the first failing platform or subspec"},{name:"--use-libraries",description:"Lint uses static libraries to install the spec"},{name:"--use-modular-headers",description:"Lint uses modular headers during installation"},{name:"--use-static-frameworks",description:"Lint uses static frameworks during installation"},{name:"--sources",description:"The sources from which to pull dependent pods (defaults to https://cdn.cocoapods.org/). Multiple,sources must be comma-delimited",args:{name:"source",suggestions:[{name:"https://cdn.cocoapods.org/",icon:"\u{1F310}"}]}},{name:"--platforms",description:"Lint against specific platforms (defaults to all platforms supported by the podspec). Multiple platforms must be comma-delimited",args:{name:"platform",suggestions:[{name:"ios",icon:"\u{1F4F1}"},{name:"macos",icon:"\u{1F4BB}"},{name:"ios,macos",icon:"\u{1F4BB}"}]}},{name:"--private",description:"Lint skips checks that apply only to public specs"},{name:"--swift-version",description:"The `SWIFT_VERSION` that should be used to lint the spec. This takes precedence over the Swift versions specified by the spec or a `.swift-version` file",args:{name:"VERSION"},icon:"https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_swift.svg"},{name:"--include-podspecs",description:"Additional ancillary podspecs which are used for linting via :path",args:{name:"podspec",generators:L}},{name:"--external-podspecs",description:"Additional ancillary podspecs which are used for linting via :podspec. If there are --include-podspecs, then these are removed from them",args:{name:"podspec",generators:L}},{name:"--skip-import-validation",description:"Lint skips validating that the pod can be imported"},{name:"--skip-tests",description:"Lint skips building and running tests during validation"},{name:"--test-specs",description:"List of test specs to run",args:{name:"test-spec"}},{name:"--analyze",description:"Validate with the Xcode Static Analysis tool"},{name:"--configuration",icon:"\u{1F6E0}",description:"Build using the given configuration (defaults to Release)",args:{name:"CONFIGURATION"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"PODSPEC_PATHS",isOptional:!0,generators:L}}]},{description:"Search for pods",name:"search",options:[{name:"--regex",description:"Interpret the `QUERY` as a regular expression"},{name:"--simple",description:"Search only by name"},{name:"--stats",description:"Show additional stats (like GitHub watchers and forks)"},{name:"--web",icon:"\u{1F310}",description:"Searches on cocoapods.org"},{name:"--ios",icon:"\u{1F4F1}",description:"Restricts the search to Pods supported on iOS"},{name:"--osx",icon:"\u{1F4BB}",description:"Restricts the search to Pods supported on macOS"},{name:"--watchos",icon:"\u231A",description:"Restricts the search to Pods supported on watchOS"},{name:"--tvos",icon:"\u{1F4FA}",description:"Restricts the search to Pods supported on tvOS"},{name:"--no-pager",description:"Do not pipe search results into a pager"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"QUERY"}},{description:"Manage spec-repositories",name:"repo",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Push new specifications to a spec-repo",name:"push",options:[{name:"--allow-warnings",icon:"\u26A0\uFE0F",description:"Allows pushing even if there are warnings"},{name:"--use-libraries",description:"Linter uses static libraries to install the spec"},{name:"--use-modular-headers",description:"Lint uses modular headers during installation"},{name:"--sources",description:"The sources from which to pull dependent pods (defaults to all available repos). Multiple sources must be comma-delimited",args:{name:"source",suggestions:[{name:"https://cdn.cocoapods.org/",icon:"\u{1F310}"}]}},{name:"--local-only",description:"Does not perform the step of pushing REPO to its remote"},{name:"--no-private",description:"Lint includes checks that apply only to public repos"},{name:"--skip-import-validation",description:"Lint skips validating that the pod can be imported"},{name:"--skip-tests",description:"Lint skips building and running tests during validation"},{name:"--commit-message",description:"Add custom commit message. Opens default editor if no commit message is specified",args:{name:"message"}},{name:"--use-json",description:"Convert the podspec to JSON before pushing it to the repo"},{name:"--swift-version",description:"The `SWIFT_VERSION` that should be used when linting the spec. This takes precedence over the Swift versions specified by the spec or a `.swift-version` file",args:{name:"VERSION"},icon:"https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_swift.svg"},{name:"--no-overwrite",description:"Disallow pushing that would overwrite an existing spec"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"REPO"},{name:"NAME.podspec",isOptional:!0,generators:L}]},{description:"Add a spec repo",name:"add",options:[{name:"--progress",description:"Show the progress of cloning the spec repository"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"NAME"},{name:"URL"},{name:"BRANCH",isOptional:!0}]},{description:"Remove a spec repo",name:"remove",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME"}},{description:"Add a spec repo backed by a CDN",name:"add-cdn",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"NAME"},{name:"URL"}]},{description:"Validates all specs in a repo list",name:"lint",options:[{name:"--only-errors",description:"Lint presents only the errors"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME|DIRECTORY",isOptional:!0}},{description:"Update a spec repo",name:"update",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME",isOptional:!0}}]},{description:"Interact with the CocoaPods API (e.g. publishing new specs)",name:"trunk",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Publish a podspec",name:"push",options:[{name:"--allow-warnings",icon:"\u26A0\uFE0F",description:"Allows push even if there are lint warnings"},{name:"--use-libraries",description:"Linter uses static libraries to install the spec"},{name:"--use-modular-headers",description:"Lint uses modular headers during installation"},{name:"--swift-version",description:"The SWIFT_VERSION that should be used to lint the spec. This takes precedence over a .swift-version file",args:{name:"VERSION"},icon:"https://raw.githubusercontent.com/vscode-icons/vscode-icons/master/icons/file_type_swift.svg"},{name:"--skip-import-validation",description:"Lint skips validating that the pod can be imported"},{name:"--skip-tests",description:"Lint skips building and running tests during validation"},{name:"--synchronous",description:"If validation depends on other recently pushed pods ,synchronize"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"PATH",isOptional:!0}},{description:"Deprecates a pod",name:"deprecate",options:[{name:"--in-favor-of",description:"The pod to deprecate this pod in favor of",args:{name:"OTHER_NAME"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME"}},{description:"Deletes a version of a pod",name:"delete",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"NAME"},{name:"VERSION"}]},{description:"Add an owner to a pod",name:"add-owner",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"POD"},{name:"OWNER-EMAIL"}]},{description:"Remove an owner from a pod",name:"remove-owner",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"POD"},{name:"OWNER-EMAIL"}]},{description:"Display information about your sessions",name:"me",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],subcommands:[{description:"Remove sessions",name:"clean-sessions",options:[{name:"--all",description:"Removes all your sessions  except for the current one"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}]}]},{description:"Manage sessions",name:"register",options:[{name:"--description",description:"An arbitrary description to easily identify your session later on",args:{name:"DESCRIPTION"}},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:[{name:"EMAIL"},{name:"YOUR_NAME",isOptional:!0}]},{description:"Returns information about a Pod",name:"info",options:[{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME"}}]},{description:"Update outdated project dependencies and create new Podfile.lock",name:"update",options:[{name:"--sources",description:"The sources from which to update dependent pods. Multiple sources must be comma-delimited",args:{name:"https://cdn.cocoapods.org/"}},{name:"--exclude-pods",description:"Pods to exclude during update. Multiple pods must be comma-delimited",args:{name:"podName"}},{name:"--clean-install",description:"Ignore the contents of the project cache and force a full pod installation. This only applies to projects that have enabled incremental installation",icon:"\u{1F6C1}"},{name:"--project-directory",description:"The path to the root of the project directory",args:{name:"/project/dir/",template:"folders"}},{name:"--no-repo-update",description:"Skip running `pod repo update` before install"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"POD_NAMES",isOptional:!0}},{description:"Try a Pod!",name:"try",options:[{name:"--podspec_name",args:{name:"name",description:"The name of the podspec file within the Git Repository"}},{name:"--no-repo-update",description:"Skip running `pod repo update` before install"},{name:"--allow-root",description:"Allows CocoaPods to run as root",icon:"\u{1F510}"}],args:{name:"NAME|URL"}}],options:[{name:"--silent",icon:"\u{1F507}",description:"Show nothing"},{name:"--verbose",icon:"\u{1F50A}",description:"Show more debugging information"},{name:"--no-ansi",description:"Show output without ANSI codes"},{name:"--help",description:"Show help banner of specified command"}]},ke=Se;export{ke as default};
